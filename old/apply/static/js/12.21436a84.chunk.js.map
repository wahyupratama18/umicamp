{"version":3,"sources":["components/Footer.tsx","components/forms/InputPassword.tsx","components/dialogs/CheckEmailVerificationDialog.tsx","scenes/SignIn.tsx"],"names":["Footer","variant","color","align","href","target","rel","style","textDecoration","Date","getFullYear","useStyles","makeStyles","theme","eye","cursor","InputPassword","onChange","classes","useState","isMasked","setIsMasked","margin","required","fullWidth","name","label","type","id","autoComplete","InputProps","endAdornment","position","onClick","className","Provider","value","size","CheckEmailVerificationDialog","onClose","React","open","setOpen","aria-labelledby","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","SignInSide","localStorage","getItem","uid","firebaseApp","useContext","FirebaseContext","userStore","UserStoreContext","history","useHistory","email","setEmail","password","setPassword","openDialog","setOpenDialog","loading","setLoading","validationSchema","yup","min","invalidForm","fields","isValidSync","useEffect","push","HOME","onSubmitHandler","e","a","preventDefault","doSignInWithEmailAndPassword","res","hasError","toast","error","message","initialize","container","component","item","xs","sm","md","Paper","elevation","square","alt","maxHeight","src","onSubmit","autoFocus","currentTarget","disabled","to","mt","SIGN_IN"],"mappings":"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","file":"static/js/12.21436a84.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <a\r\n                href={'http://oia.um.ac.id/umicamp/'}\r\n                target={'_blank'}\r\n                rel=\"noopener noreferrer\"\r\n                style={{\r\n                textDecoration: 'none',\r\n                color: '#0000008a'\r\n            }}>\r\n                Labour of ❤&nbsp;\r\n                {new Date().getFullYear()}\r\n            </a>\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useState} from \"react\";\r\nimport {InputAdornment, TextField, Theme} from \"@material-ui/core\";\r\nimport {OutlinedInputProps} from \"@material-ui/core/OutlinedInput\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FaEye, FaEyeSlash} from 'react-icons/fa';\r\nimport {IconContext} from \"react-icons\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    eye: {\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\ninterface IInputPassword {\r\n    onChange?: OutlinedInputProps['onChange'];\r\n}\r\n\r\nconst InputPassword: React.FC<IInputPassword> = ({onChange}) => {\r\n    const classes = useStyles();\r\n    const [isMasked, setIsMasked] = useState<boolean>(true);\r\n\r\n    const toggleMask = () => {\r\n        setIsMasked(!isMasked);\r\n    };\r\n\r\n    return (<>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={isMasked ? 'password' : 'text'}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position={\"end\"}>\r\n                        <span onClick={toggleMask} className={classes.eye}>\r\n                            <IconContext.Provider value={{size: '1.5em'}}>\r\n                              <div>\r\n                                  {isMasked ? <FaEye/> : <FaEyeSlash/>}\r\n                              </div>\r\n                            </IconContext.Provider>\r\n                        </span>\r\n                    </InputAdornment>\r\n                )\r\n            }}\r\n            onChange={onChange}\r\n        />\r\n    </>)\r\n};\r\n\r\nexport default InputPassword;","import React from \"react\";\r\nimport {Dialog, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface ICheckEmailVerificationDialog {\r\n    onClose?: () => void,\r\n}\r\n\r\nconst CheckEmailVerificationDialog: React.FC<ICheckEmailVerificationDialog> = ({onClose}) => {\r\n    const [open, setOpen] = React.useState<boolean>(true);\r\n\r\n    const onCloseHandler = () => {\r\n        setOpen(false);\r\n        if (onClose) onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={onCloseHandler} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Information</DialogTitle>\r\n            <DialogContent>\r\n                <Grid>\r\n                    <Typography>\r\n                        Please check the email verification in your <strong>Inbox</strong> or <strong>Spam</strong> folder.\r\n                    </Typography>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CheckEmailVerificationDialog;","import React, {FormEventHandler, useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Icon} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {toast} from \"react-toastify\";\r\nimport {HOME, SIGN_IN} from \"../constants\";\r\nimport * as yup from \"yup\";\r\nimport LoadingBackground from \"../components/commons/LoadingBackdrop\";\r\nimport Footer from \"../components/Footer\";\r\nimport InputPassword from \"../components/forms/InputPassword\";\r\nimport {FirebaseContext, UserStoreContext} from \"../contexts\";\r\nimport CheckEmailVerificationDialog from \"../components/dialogs/CheckEmailVerificationDialog\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(./apply/assets/images/um-icamp-2020-background-beach.png)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#077a80',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n    const classes = useStyles();\r\n    const [uid] = useState<String>(localStorage.getItem('uid') as String);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const userStore = useContext(UserStoreContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .email(),\r\n        password: yup\r\n            .string()\r\n            .min(6),\r\n    });\r\n\r\n    const invalidForm: boolean = !validationSchema.fields.email.isValidSync(email) || !validationSchema.fields.password.isValidSync(password);\r\n\r\n\r\n    useEffect(() => {\r\n        if (uid) history.push(HOME);\r\n\r\n    }, [uid, history]);\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (!invalidForm) {\r\n            setLoading(true);\r\n\r\n            const res = await firebaseApp?.doSignInWithEmailAndPassword(email, password);\r\n            if (res?.hasError()) {\r\n                toast.error(res?.error?.message);\r\n\r\n                if (res?.error?.message === 'Email has not been verified. Please check your email') setOpenDialog(true);\r\n\r\n                setLoading(false);\r\n            } else {\r\n                await userStore?.initialize();\r\n                history.push(HOME);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <LoadingBackground open={loading}/>\r\n            <CssBaseline/>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <div>\r\n                        <img\r\n                            alt={'UM iCamp 2020 - Sign In Logo'}\r\n                            style={{maxHeight: '200px'}}\r\n                            src={'./apply/assets/images/um-icamp-2020.png'}/>\r\n                    </div>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>lock_outlined_icon</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={onSubmitHandler}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n\r\n                        <InputPassword onChange={(e) => setPassword(e.currentTarget.value)}/>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={invalidForm || loading}\r\n\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link to=\"/\" style={{\r\n                                    textDecoration: 'none',\r\n                                    color: '#000000de'\r\n                                }}>\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to=\"/sign-up\" style={{\r\n                                    textDecoration: 'none',\r\n                                    color: '#000000de'\r\n                                }}>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5}>\r\n                            <Footer/>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n            {\r\n                openDialog ? <CheckEmailVerificationDialog onClose={() => {\r\n                    history.push(SIGN_IN);\r\n                    setOpenDialog(false);\r\n                }}/> : <></>\r\n\r\n            }\r\n        </Grid>\r\n    );\r\n}"],"sourceRoot":""}