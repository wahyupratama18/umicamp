{"version":3,"sources":["components/Footer.tsx","scenes/SignIn.tsx"],"names":["Footer","variant","color","align","href","target","rel","style","textDecoration","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","SignInSide","classes","useState","localStorage","getItem","uid","firebaseApp","useContext","FirebaseContext","userStore","UserStoreContext","history","useHistory","email","setEmail","password","setPassword","loading","setLoading","validationSchema","yup","min","invalidForm","fields","isValidSync","useEffect","push","HOME","onSubmitHandler","e","a","preventDefault","doSignInWithEmailAndPassword","res","hasError","toast","error","message","initialize","container","component","className","open","item","xs","sm","md","Paper","elevation","square","alt","maxHeight","src","onSubmit","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","currentTarget","value","disabled","to","mt"],"mappings":"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","file":"static/js/9.f4d596d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <a\r\n                href={'http://oia.um.ac.id/umicamp/'}\r\n                target={'_blank'}\r\n                rel=\"noopener noreferrer\"\r\n                style={{\r\n                textDecoration: 'none',\r\n                color: '#0000008a'\r\n            }}>\r\n                Labour of ❤&nbsp;\r\n            </a>\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {FormEventHandler, useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Icon} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {toast} from \"react-toastify\";\r\nimport {HOME} from \"../constants\";\r\nimport {FirebaseContext} from \"../firebase\";\r\nimport * as yup from \"yup\";\r\nimport LoadingBackground from \"../components/LoadingBackdrop\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(./apply/assets/images/um-icamp-2020-background.png)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: '#077a80',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n    const classes = useStyles();\r\n    const [uid] = useState<String>(localStorage.getItem('uid') as String);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const userStore = useContext(UserStoreContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .email(),\r\n        password: yup\r\n            .string()\r\n            .min(6),\r\n    });\r\n\r\n    const invalidForm: boolean = !validationSchema.fields.email.isValidSync(email) || !validationSchema.fields.password.isValidSync(password);\r\n\r\n\r\n    useEffect(() => {\r\n        if (uid) history.push(HOME);\r\n\r\n    }, [uid, history]);\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (!invalidForm) {\r\n            setLoading(true);\r\n\r\n            const res = await firebaseApp?.doSignInWithEmailAndPassword(email, password);\r\n            if (res?.hasError()) {\r\n                toast.error(res?.error?.message);\r\n                setLoading(false);\r\n            } else {\r\n                await userStore?.initialize();\r\n                history.push(HOME);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <LoadingBackground open={loading}/>\r\n            <CssBaseline/>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <div>\r\n                        <img\r\n                            alt={'UM iCamp 2020 - Sign In Logo'}\r\n                            style={{maxHeight: '200px'}}\r\n                            src={'./apply/assets/images/um-icamp-2020.png'}/>\r\n                    </div>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>lock_outlined_icon</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={onSubmitHandler}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={(e) => setPassword(e.currentTarget.value)}\r\n                        />\r\n                        {/*<FormControlLabel*/}\r\n                        {/*    control={<Checkbox value=\"remember\" color=\"primary\"/>}*/}\r\n                        {/*    label=\"Remember me\"*/}\r\n                        {/*/>*/}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={invalidForm || loading}\r\n\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link to=\"/\" style={{\r\n                                    textDecoration: 'none',\r\n                                    color: '#000000de'\r\n                                }}>\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to=\"/sign-up\" style={{\r\n                                    textDecoration: 'none',\r\n                                    color: '#000000de'\r\n                                }}>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5}>\r\n                            <Footer/>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}"],"sourceRoot":""}