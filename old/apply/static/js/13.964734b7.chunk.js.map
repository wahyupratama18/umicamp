{"version":3,"sources":["components/MenuNavigation.tsx","components/Navigation.tsx","components/commons/ContentLayout.tsx","components/UserDashboard.tsx","components/AdminDashboard.tsx","scenes/Home.tsx"],"names":["MenuNavigation","classes","useStyles","React","useState","anchorEl","setAnchorEl","firebaseApp","useContext","FirebaseContext","userStore","UserStoreContext","history","useHistory","localStorage","getItem","emailUser","handleClose","signOutHandler","a","doSignOut","res","hasError","clear","push","SIGN_IN","Typography","variant","style","cursor","IconButton","aria-owns","Boolean","undefined","aria-haspopup","color","onClick","event","currentTarget","Icon","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","className","resetLinkStyleMenu","to","SETTINGS","MenuItem","Divider","makeStyles","createStyles","resetLinkStyleApppBar","textDecoration","Navigation","theme","useTheme","openNavigation","setOpenNavigation","openMenuReg","setOpenMenuReg","handleDrawerOpen","setItem","handleDrawerClose","handleClickMenuReg","openPage","pageRoute","MenuForUser","Tooltip","disableHoverListener","title","aria-label","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","nested","APPLICATION_FORM","listItemIcon","configApplicationForm","isSubmitted","applicationFormIsValid","MenuForAdmin","LIST_USER","useObserver","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","edge","menuButton","hide","alt","src","height","grow","Drawer","drawer","drawerOpen","drawerClose","paper","display","direction","primaryTypographyProps","HOME","isAdmin","flexGrow","resetLinkStyle","resetLinkStyleInMenu","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","paddingLeft","minWidth","ContentLayout","children","UserDashboard","Grid","item","xs","align","textAlign","maxHeight","gutterBottom","maxWidth","margin","Button","size","AdminDashboard","Home"],"mappings":"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","file":"static/js/13.964734b7.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {createStyles, Divider, Icon, IconButton, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {SETTINGS, SIGN_IN} from \"../constants\";\r\nimport {FirebaseContext, UserStoreContext} from \"../contexts\";\r\n\r\nexport default function MenuNavigation() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const userStore = useContext(UserStoreContext);\r\n    const history = useHistory();\r\n    const [emailUser] = useState<string>(localStorage.getItem('email') ?? '');\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const signOutHandler = async () => {\r\n        setAnchorEl(null);\r\n\r\n        const res = await firebaseApp?.doSignOut();\r\n        if (!res?.hasError()) {\r\n            userStore?.clear();\r\n            history.push(SIGN_IN);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={\"subtitle2\"} style={{cursor: 'default'}}>\r\n                {emailUser}\r\n            </Typography>\r\n            <IconButton\r\n                aria-owns={Boolean(anchorEl) ? \"menu-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={handleClick}\r\n            >\r\n                <Icon>account_circle</Icon>\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <NavLink className={classes.resetLinkStyleMenu} to={SETTINGS}>\r\n                    <MenuItem onClick={handleClose}>\r\n                        Settings\r\n                    </MenuItem>\r\n                </NavLink>\r\n                <Divider/>\r\n                <MenuItem onClick={signOutHandler}>\r\n                    Sign Out\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n    resetLinkStyleApppBar: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    }\r\n}));\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    AppBar,\r\n    Collapse,\r\n    createStyles,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Icon,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Theme,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport MenuNavigation from \"./MenuNavigation\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {APPLICATION_FORM, HOME} from \"../constants\";\r\nimport {UserStoreContext} from \"../contexts\";\r\nimport {LIST_USER} from \"../constants/routes\";\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const theme = useTheme();\r\n    const [openNavigation, setOpenNavigation] = React.useState(localStorage.getItem('openNavigation') === 'open' ? true : false);\r\n    const [openMenuReg, setOpenMenuReg] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpenNavigation(true);\r\n        localStorage.setItem('openNavigation', 'open');\r\n\r\n        setOpenMenuReg(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpenNavigation(false);\r\n        localStorage.setItem('openNavigation', 'close');\r\n\r\n        setOpenMenuReg(false);\r\n    };\r\n\r\n    const handleClickMenuReg = () => {\r\n        setOpenMenuReg(!openMenuReg);\r\n    };\r\n\r\n    const openPage = (pageRoute: string) => {\r\n        history.push(pageRoute);\r\n    };\r\n\r\n    const MenuForUser = () => {\r\n        return <>\r\n            <Tooltip disableHoverListener={openNavigation} title=\"Submission\" aria-label=\"submission\">\r\n                <ListItem button onClick={handleClickMenuReg}>\r\n                    <ListItemIcon>\r\n                        <Icon>post_add</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Submission\"/>\r\n                    {openMenuReg ? <Icon>expand_less</Icon> : <Icon>expand_more</Icon>}\r\n                </ListItem>\r\n            </Tooltip>\r\n            <Collapse in={openMenuReg} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <Tooltip disableHoverListener={openNavigation} title=\"1. Application Form\"\r\n                             aria-label=\"application-form\">\r\n                        <ListItem button className={classes.nested} onClick={() => openPage(APPLICATION_FORM)}>\r\n                            <ListItemIcon className={classes.listItemIcon}>\r\n                                <Icon\r\n                                    color={(userStore?.configApplicationForm.isSubmitted ?? false) ? \"primary\" : 'inherit'}>\r\n                                    {userStore?.applicationFormIsValid ? \"check_circle\" : \"edit\"}\r\n                                </Icon>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Application Form\"/>\r\n                        </ListItem>\r\n                    </Tooltip>\r\n                    {/*<Tooltip disableHoverListener={openNavigation} title=\"2. Letter of Commitment\"*/}\r\n                    {/*         aria-label=\"letter-of-commitment\">*/}\r\n                    {/*    <ListItem button disabled className={classes.nested}>*/}\r\n                    {/*        <ListItemIcon className={classes.listItemIcon}>*/}\r\n                    {/*            <Icon>lock</Icon>*/}\r\n                    {/*        </ListItemIcon>*/}\r\n                    {/*        <ListItemText primary=\"2. Letter of Commitment\"/>*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</Tooltip>*/}\r\n                    {/*<Tooltip disableHoverListener={openNavigation} title=\"3. Travel Documents\"*/}\r\n                    {/*         aria-label=\"travel-documents\">*/}\r\n                    {/*    <ListItem button disabled className={classes.nested}>*/}\r\n                    {/*        <ListItemIcon className={classes.listItemIcon}>*/}\r\n                    {/*            <Icon>lock</Icon>*/}\r\n                    {/*        </ListItemIcon>*/}\r\n                    {/*        <ListItemText primary=\"3. Travel Documents\"/>*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</Tooltip>*/}\r\n                </List>\r\n            </Collapse>\r\n            <Divider/>\r\n        </>\r\n    };\r\n\r\n    const MenuForAdmin = () => {\r\n        return <>\r\n            <Tooltip disableHoverListener={openNavigation} title=\"User Management\" aria-label=\"userManagement\">\r\n                <ListItem button  onClick={() => openPage(LIST_USER)}>\r\n                    <ListItemIcon>\r\n                        <Icon>people_alt</Icon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"User Management\"/>\r\n                </ListItem>\r\n            </Tooltip>\r\n            <Divider/>\r\n        </>;\r\n    };\r\n\r\n    return useObserver(() => (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openNavigation,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: openNavigation,\r\n                        })}\r\n                    >\r\n                        <Icon>menu</Icon>\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"subtitle1\">\r\n                        <img alt={'UM iCamp 2020 logo navigation'} src={'./apply/assets/images/um-icamp-2020-glow.png'}\r\n                             height={45}/>\r\n                        &nbsp;&nbsp;\r\n                    </Typography>\r\n                    <Typography className={classes.grow} color=\"inherit\" variant=\"h6\">\r\n                        <span onClick={handleDrawerOpen} style={{cursor: \"pointer\"}}>\r\n                            {openNavigation ? ' ' : 'UM iCamp 2020'}\r\n                        </span>\r\n                    </Typography>\r\n                    <MenuNavigation/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: openNavigation,\r\n                    [classes.drawerClose]: !openNavigation,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: openNavigation,\r\n                        [classes.drawerClose]: !openNavigation,\r\n                    }),\r\n                }}\r\n            >\r\n                <div style={{height: '64px', display: \"flex\"}}>\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            {theme.direction === 'rtl' ? <Icon>chevron_right</Icon> : <Icon>chevron_left</Icon>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"UM iCamp 2020\" primaryTypographyProps={{variant: \"h6\"}}/>\r\n                    </ListItem>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <Tooltip disableHoverListener={openNavigation} title=\"Dashboard\" aria-label=\"dashboard\">\r\n                        <ListItem button onClick={() => openPage(HOME)}>\r\n                            <ListItemIcon><Icon>dashboard</Icon></ListItemIcon>\r\n                            <ListItemText primary={\"Dashboard\"}/>\r\n                        </ListItem>\r\n                    </Tooltip>\r\n                </List>\r\n                <Divider/>\r\n                {\r\n                    userStore?.isAdmin ? <MenuForAdmin/> : <MenuForUser/>\r\n                }\r\n\r\n            </Drawer>\r\n        </div>\r\n    ));\r\n}\r\n\r\nconst DRAWER_WIDTH = 275;\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    resetLinkStyle: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleInMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: DRAWER_WIDTH,\r\n        width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: DRAWER_WIDTH,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: DRAWER_WIDTH,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(3),\r\n    },\r\n    listItemIcon: {\r\n        minWidth: '47px',\r\n    }\r\n}));","import React from 'react';\r\nimport Navigation from \"../../components/Navigation\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\nconst ContentLayout: React.FC = ({children}) => {\r\n    const classes = useStyles();\r\n\r\n    return useObserver(() => (<div className={classes.root}>\r\n        <Navigation/>\r\n\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n            {children}\r\n        </main>\r\n    </div>));\r\n};\r\n\r\nexport default ContentLayout;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {APPLICATION_FORM} from \"../constants\";\r\n\r\nconst UserDashboard: React.FC = () => {\r\n\r\n    return (<>\r\n        <Grid item xs={12}\r\n        >\r\n            <Typography variant=\"h3\" align={\"center\"}>\r\n                Welcome to UM iCamp\r\n            </Typography>\r\n            <Divider/>\r\n            <br/>\r\n            <br/>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <img\r\n                    alt={'UM iCamp 2020 - Sign In Logo'}\r\n                    style={{maxHeight: '35%'}}\r\n                    src={'./apply/assets/images/um-icamp-2020.png'}/>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Typography variant=\"body1\" gutterBottom\r\n                        style={{minWidth: '400px', maxWidth: '50%', textAlign: 'center', margin: 'auto'}}>\r\n                Please continue the registration for UM iCamp 2020 by opening the navigation sidebar on your <strong>left\r\n                screen</strong>, then choose <strong>Submission > Application Form</strong> menu, or click this button\r\n                below.\r\n            </Typography>\r\n            <br/>\r\n            <br/>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <Link to={APPLICATION_FORM} style={{textDecoration: 'none'}}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        size={\"medium\"}\r\n                        variant={\"contained\"}\r\n                    >\r\n                        Let's Get Started!\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nexport default UserDashboard;","import React from 'react';\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n\r\n    return (<>\r\n        <Grid item xs={12}>\r\n            <Typography variant=\"h3\">\r\n                Dashboard\r\n            </Typography>\r\n            <Divider/>\r\n            <br/>\r\n        </Grid>\r\n    </>);\r\n};\r\n\r\nexport default AdminDashboard;","import React, {useContext} from \"react\";\r\nimport ContentLayout from \"../components/commons/ContentLayout\";\r\nimport UserDashboard from \"../components/UserDashboard\";\r\nimport {UserStoreContext} from \"../contexts\";\r\nimport AdminDashboard from \"../components/AdminDashboard\";\r\n\r\nconst Home: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    return (<ContentLayout>\r\n        {\r\n            userStore?.isAdmin ?\r\n                <AdminDashboard/> :\r\n                <UserDashboard/>\r\n        }\r\n    </ContentLayout>);\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}