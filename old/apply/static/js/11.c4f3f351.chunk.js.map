{"version":3,"sources":["components/MenuNavigation.tsx","components/Navigation.tsx","scenes/Home.tsx"],"names":["useStyles","makeStyles","createStyles","resetLinkStyleApppBar","textDecoration","color","resetLinkStyleMenu","MenuNavigation","classes","React","useState","anchorEl","setAnchorEl","firebaseApp","useContext","FirebaseContext","userStore","UserStoreContext","history","useHistory","localStorage","getItem","emailUser","handleClose","signOutHandler","a","doSignOut","res","hasError","clear","push","SIGN_IN","Typography","variant","style","cursor","IconButton","aria-owns","Boolean","undefined","aria-haspopup","onClick","event","currentTarget","Icon","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","className","to","SETTINGS","MenuItem","Divider","theme","grow","flexGrow","resetLinkStyle","resetLinkStyleInMenu","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","nested","paddingLeft","listItemIcon","minWidth","Navigation","useTheme","openNavigation","setOpenNavigation","openMenuReg","setOpenMenuReg","handleDrawerOpen","setItem","handleDrawerClose","handleClickMenuReg","openPage","pageRoute","useObserver","CssBaseline","AppBar","position","clsx","Toolbar","aria-label","edge","alt","src","height","Drawer","paper","ListItem","button","ListItemIcon","direction","ListItemText","primary","primaryTypographyProps","List","Tooltip","disableHoverListener","title","HOME","Collapse","in","timeout","unmountOnExit","component","disablePadding","APPLICATION_FORM","applicationFormIsValid","disabled","textAlign","Home","maxHeight","gutterBottom","maxWidth","margin","size"],"mappings":"wZAOMA,EAAYC,aAAW,kBAAMC,YAAa,CAC5CC,sBAAuB,CACnBC,eAAgB,OAChBC,MAAO,SAEXC,mBAAoB,CAChBF,eAAgB,OAChBC,MAAO,cAIA,SAASE,IAAkB,IAAD,EAC/BC,EAAUR,IADqB,EAELS,IAAMC,SAA6B,MAF9B,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAG/BC,EAAcC,qBAAWC,KACzBC,EAAYF,qBAAWG,KACvBC,EAAUC,cALqB,EAMjBT,mBAAQ,UAASU,aAAaC,QAAQ,gBAA9B,QAA0C,IAA/DC,EAN8B,oBAY/BC,EAAc,WAChBX,EAAY,OAGVY,EAAc,uCAAG,4BAAAC,EAAA,6DACnBb,EAAY,MADO,gBAGDC,QAHC,IAGDA,OAHC,EAGDA,EAAaa,YAHZ,QAIf,QADEC,EAHa,cAIf,IAACA,OAAD,EAACA,EAAKC,cACG,OAATZ,QAAS,IAATA,KAAWa,QACXX,EAAQY,KAAKC,MANE,2CAAH,qDAUpB,OACI,oCACI,kBAACC,EAAA,EAAD,CAAYC,QAAS,YAAaC,MAAO,CAACC,OAAQ,YAC7Cb,GAEL,kBAACc,EAAA,EAAD,CACIC,YAAWC,QAAQ3B,GAAY,mBAAgB4B,EAC/CC,gBAAc,OACdnC,MAAM,UACNoC,QA3BQ,SAACC,GACjB9B,EAAY8B,EAAMC,iBA4BV,kBAACC,EAAA,EAAD,wBAGJ,kBAACC,EAAA,EAAD,CACIC,GAAG,cACHnC,SAAUA,EACVoC,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBE,KAAMb,QAAQ3B,GACdyC,QAAS7B,GAET,kBAAC,IAAD,CAAS8B,UAAW7C,EAAQF,mBAAoBgD,GAAIC,KAChD,kBAACC,EAAA,EAAD,CAAUf,QAASlB,GAAnB,aAIJ,kBAACkC,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,CAAUf,QAASjB,GAAnB,c,+CClDhB,IAEMxB,EAAYC,aAAW,SAACyD,GAAD,OAAkBxD,YAAa,CACxDyD,KAAM,CACFC,SAAU,GAEdC,eAAgB,CACZzD,eAAgB,OAChBC,MAAO,SAEXyD,qBAAsB,CAClB1D,eAAgB,OAChBC,MAAO,SAEX0D,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQR,EAAMQ,OAAOC,OAAS,EAC9BC,WAAYV,EAAMW,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQb,EAAMW,YAAYE,OAAOC,MACjCC,SAAUf,EAAMW,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,WAzBY,IA0BZC,MAAM,eAAD,OA1BO,IA0BP,OACLT,WAAYV,EAAMW,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQb,EAAMW,YAAYE,OAAOC,MACjCC,SAAUf,EAAMW,YAAYI,SAASK,kBAG7CC,WAAY,CACRC,YAAa,IAEjBC,KAAM,CACFjB,QAAS,QAEbG,OAAQ,CACJU,MAvCY,IAwCZK,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACRP,MA5CY,IA6CZT,WAAYV,EAAMW,YAAYC,OAAO,QAAS,CAC1CC,OAAQb,EAAMW,YAAYE,OAAOC,MACjCC,SAAUf,EAAMW,YAAYI,SAASK,kBAG7CO,YAAY,aACRjB,WAAYV,EAAMW,YAAYC,OAAO,QAAS,CAC1CC,OAAQb,EAAMW,YAAYE,OAAOC,MACjCC,SAAUf,EAAMW,YAAYI,SAASC,gBAEzCY,UAAW,SACXT,MAAOnB,EAAM6B,QAAQ,GAAK,GACzB7B,EAAM8B,YAAYC,GAAG,MAAQ,CAC1BZ,MAAOnB,EAAM6B,QAAQ,GAAK,IAGlCG,QAAQ,aACJ1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAASnC,EAAM6B,QAAQ,EAAG,IACvB7B,EAAMoC,OAAOJ,SAEpBK,QAAS,CACLnC,SAAU,EACViC,QAASnC,EAAM6B,QAAQ,IAE3BS,OAAQ,CACJC,YAAavC,EAAM6B,QAAQ,IAE/BW,aAAc,CACVC,SAAU,aAIH,SAASC,IACpB,IAAM5F,EAAUR,IACVkB,EAAUC,cACVH,EAAYF,qBAAWG,KAEvByC,EAAQ2C,cALmB,EAMW5F,IAAMC,SAAoD,SAA3CU,aAAaC,QAAQ,mBAN/C,mBAM1BiF,EAN0B,KAMVC,EANU,OAOK9F,IAAMC,UAAS,GAPpB,mBAO1B8F,EAP0B,KAObC,EAPa,KAS3BC,EAAmB,WACrBH,GAAkB,GAClBnF,aAAauF,QAAQ,iBAAkB,QAEvCF,GAAe,IAGbG,EAAoB,WACtBL,GAAkB,GAClBnF,aAAauF,QAAQ,iBAAkB,SAEvCF,GAAe,IAGbI,EAAqB,WACvBJ,GAAgBD,IAGdM,EAAW,SAACC,GACd7F,EAAQY,KAAKiF,IAGjB,OAAOC,aAAY,0BACf,yBAAK3D,UAAW7C,EAAQuD,MACpB,kBAACkD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACIC,SAAS,QACT9D,UAAW+D,YAAK5G,EAAQyD,OAAT,eACVzD,EAAQmE,YAAc2B,KAG3B,kBAACe,EAAA,EAAD,KACI,kBAACjF,EAAA,EAAD,CACI/B,MAAM,UACNiH,aAAW,cACX7E,QAASiE,EACTa,KAAK,QACLlE,UAAW+D,YAAK5G,EAAQuE,WAAT,eACVvE,EAAQyE,KAAOqB,KAGpB,kBAAC1D,EAAA,EAAD,cAGJ,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,aAChB,yBAAKuF,IAAK,gCAAiCC,IAAK,+CAC3CC,OAAQ,KAFjB,YAKA,kBAAC1F,EAAA,EAAD,CAAYqB,UAAW7C,EAAQmD,KAAMtD,MAAM,UAAU4B,QAAQ,MACzD,0BAAMQ,QAASiE,EAAkBxE,MAAO,CAACC,OAAQ,YAC5CmE,EAAiB,IAAM,kBAGhC,kBAAC/F,EAAD,QAGR,kBAACoH,EAAA,EAAD,CACI1F,QAAQ,YACRoB,UAAW+D,YAAK5G,EAAQ2D,QAAT,mBACV3D,EAAQ4E,WAAakB,GADX,cAEV9F,EAAQ6E,aAAeiB,GAFb,IAIf9F,QAAS,CACLoH,MAAOR,aAAI,mBACN5G,EAAQ4E,WAAakB,GADf,cAEN9F,EAAQ6E,aAAeiB,GAFjB,MAMf,yBAAKpE,MAAO,CAACwF,OAAQ,OAAQ1D,QAAS,SAClC,kBAAC6D,EAAA,EAAD,CAAUC,QAAM,EAACrF,QAASmE,GACtB,kBAACmB,EAAA,EAAD,KACyB,QAApBrE,EAAMsE,UAAsB,kBAACpF,EAAA,EAAD,sBAA6B,kBAACA,EAAA,EAAD,sBAE9D,kBAACqF,EAAA,EAAD,CAAcC,QAAQ,gBAAgBC,uBAAwB,CAAClG,QAAS,UAGhF,kBAACwB,EAAA,EAAD,MACA,kBAAC2E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,qBAAsBhC,EAAgBiC,MAAM,YAAYjB,aAAW,aACxE,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACrF,QAAS,kBAAMqE,EAAS0B,OACrC,kBAACT,EAAA,EAAD,KAAc,kBAACnF,EAAA,EAAD,mBACd,kBAACqF,EAAA,EAAD,CAAcC,QAAS,iBAInC,kBAACzE,EAAA,EAAD,MACA,kBAAC4E,EAAA,EAAD,CAASC,qBAAsBhC,EAAgBiC,MAAM,aAAajB,aAAW,cACzE,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACrF,QAASoE,GACtB,kBAACkB,EAAA,EAAD,KACI,kBAACnF,EAAA,EAAD,kBAEJ,kBAACqF,EAAA,EAAD,CAAcC,QAAQ,eACrB1B,EAAc,kBAAC5D,EAAA,EAAD,oBAA2B,kBAACA,EAAA,EAAD,sBAGlD,kBAAC6F,EAAA,EAAD,CAAUC,GAAIlC,EAAamC,QAAQ,OAAOC,eAAa,GACnD,kBAACR,EAAA,EAAD,CAAMS,UAAU,MAAMC,gBAAc,GAChC,kBAACT,EAAA,EAAD,CAASC,qBAAsBhC,EAAgBiC,MAAM,sBAC5CjB,aAAW,oBAChB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACzE,UAAW7C,EAAQwF,OAAQvD,QAAS,kBAAMqE,EAASiC,OAChE,kBAAChB,EAAA,EAAD,CAAc1E,UAAW7C,EAAQ0F,cAC7B,kBAACtD,EAAA,EAAD,MAAgB,OAAT5B,QAAS,IAATA,OAAA,EAAAA,EAAWgI,wBAAyB,eAAiB,SAEhE,kBAACf,EAAA,EAAD,CAAcC,QAAQ,0BAG9B,kBAACG,EAAA,EAAD,CAASC,qBAAsBhC,EAAgBiC,MAAM,0BAC5CjB,aAAW,wBAChB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACmB,UAAQ,EAAC5F,UAAW7C,EAAQwF,QACzC,kBAAC+B,EAAA,EAAD,CAAc1E,UAAW7C,EAAQ0F,cAC7B,kBAACtD,EAAA,EAAD,cAEJ,kBAACqF,EAAA,EAAD,CAAcC,QAAQ,8BAG9B,kBAACG,EAAA,EAAD,CAASC,qBAAsBhC,EAAgBiC,MAAM,sBAC5CjB,aAAW,oBAChB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACmB,UAAQ,EAAC5F,UAAW7C,EAAQwF,QACzC,kBAAC+B,EAAA,EAAD,CAAc1E,UAAW7C,EAAQ0F,cAC7B,kBAACtD,EAAA,EAAD,cAEJ,kBAACqF,EAAA,EAAD,CAAcC,QAAQ,4BAKtC,kBAACzE,EAAA,EAAD,a,wIC9OVzD,EAAYC,aAAW,SAACyD,GAAD,OACzBxD,YAAa,CACT6D,KAAM,CACFC,QAAS,QAEb0B,QAAQ,aACJ1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAASnC,EAAM6B,QAAQ,EAAG,IACvB7B,EAAMoC,OAAOJ,SAEpBK,QAAS,CACLnC,SAAU,EACViC,QAASnC,EAAM6B,QAAQ,GACvB2D,UAAW,eAoDRC,UA/CQ,WACnB,IAAM3I,EAAUR,IAEhB,OAAQ,yBAAKqD,UAAW7C,EAAQuD,MAC5B,kBAAC,IAAD,MACA,0BAAMV,UAAW7C,EAAQuF,SACrB,yBAAK1C,UAAW7C,EAAQkF,UAExB,kBAAC,IAAD,CAAYzD,QAAQ,MAApB,uBAGA,kBAAC,IAAD,MACA,6BACA,6BACA,6BACI,yBACIuF,IAAK,+BACLtF,MAAO,CAACkH,UAAW,OACnB3B,IAAK,6CAEb,6BACA,6BAEA,kBAAC,IAAD,CAAYxF,QAAQ,QAAQoH,cAAY,EAC5BnH,MAAO,CAACiE,SAAU,QAASmD,SAAU,MAAOJ,UAAW,SAAUK,OAAQ,SADrF,gGAEiG,+CAFjG,iBAGiC,iEAHjC,uCAMA,6BACA,6BAEA,kBAAC,IAAD,CAAMjG,GAAIyF,IAAkB7G,MAAO,CAAC9B,eAAgB,SAChD,kBAAC,IAAD,CACIC,MAAO,UACPmJ,KAAM,SACNvH,QAAS,aAHb","file":"static/js/11.c4f3f351.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {createStyles, Divider, Icon, IconButton, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {SETTINGS, SIGN_IN} from \"../constants\";\r\nimport {FirebaseContext} from \"../firebase\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n    resetLinkStyleApppBar: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport default function MenuNavigation() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const userStore = useContext(UserStoreContext);\r\n    const history = useHistory();\r\n    const [emailUser] = useState<string>(localStorage.getItem('email') ?? '');\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const signOutHandler = async () => {\r\n        setAnchorEl(null);\r\n\r\n        const res = await firebaseApp?.doSignOut();\r\n        if (!res?.hasError()) {\r\n            userStore?.clear();\r\n            history.push(SIGN_IN);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={\"subtitle2\"} style={{cursor: 'default'}}>\r\n                {emailUser}\r\n            </Typography>\r\n            <IconButton\r\n                aria-owns={Boolean(anchorEl) ? \"menu-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={handleClick}\r\n            >\r\n                <Icon>account_circle</Icon>\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <NavLink className={classes.resetLinkStyleMenu} to={SETTINGS}>\r\n                    <MenuItem onClick={handleClose}>\r\n                        Settings\r\n                    </MenuItem>\r\n                </NavLink>\r\n                <Divider/>\r\n                <MenuItem onClick={signOutHandler}>\r\n                    Sign Out\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    AppBar,\r\n    Collapse,\r\n    createStyles,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Icon,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Theme,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport MenuNavigation from \"./MenuNavigation\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {APPLICATION_FORM, HOME} from \"../constants\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\n\r\nconst drawerWidth = 275;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    resetLinkStyle: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleInMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(3),\r\n    },\r\n    listItemIcon: {\r\n        minWidth: '47px',\r\n    }\r\n}));\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const theme = useTheme();\r\n    const [openNavigation, setOpenNavigation] = React.useState(localStorage.getItem('openNavigation') === 'open' ? true : false);\r\n    const [openMenuReg, setOpenMenuReg] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpenNavigation(true);\r\n        localStorage.setItem('openNavigation', 'open');\r\n\r\n        setOpenMenuReg(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpenNavigation(false);\r\n        localStorage.setItem('openNavigation', 'close');\r\n\r\n        setOpenMenuReg(false);\r\n    };\r\n\r\n    const handleClickMenuReg = () => {\r\n        setOpenMenuReg(!openMenuReg);\r\n    };\r\n\r\n    const openPage = (pageRoute: string) => {\r\n        history.push(pageRoute);\r\n    };\r\n\r\n    return useObserver(() => (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openNavigation,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: openNavigation,\r\n                        })}\r\n                    >\r\n                        <Icon>menu</Icon>\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"subtitle1\">\r\n                        <img alt={'UM iCamp 2020 logo navigation'} src={'./apply/assets/images/um-icamp-2020-glow.png'}\r\n                             height={45}/>\r\n                        &nbsp;&nbsp;\r\n                    </Typography>\r\n                    <Typography className={classes.grow} color=\"inherit\" variant=\"h6\">\r\n                        <span onClick={handleDrawerOpen} style={{cursor: \"pointer\"}}>\r\n                            {openNavigation ? ' ' : 'UM iCamp 2020'}\r\n                        </span>\r\n                    </Typography>\r\n                    <MenuNavigation/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: openNavigation,\r\n                    [classes.drawerClose]: !openNavigation,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: openNavigation,\r\n                        [classes.drawerClose]: !openNavigation,\r\n                    }),\r\n                }}\r\n            >\r\n                <div style={{height: '64px', display: \"flex\"}}>\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            {theme.direction === 'rtl' ? <Icon>chevron_right</Icon> : <Icon>chevron_left</Icon>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"UM iCamp 2020\" primaryTypographyProps={{variant: \"h6\"}}/>\r\n                    </ListItem>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <Tooltip disableHoverListener={openNavigation} title=\"Dashboard\" aria-label=\"dashboard\">\r\n                        <ListItem button onClick={() => openPage(HOME)}>\r\n                            <ListItemIcon><Icon>dashboard</Icon></ListItemIcon>\r\n                            <ListItemText primary={\"Dashboard\"}/>\r\n                        </ListItem>\r\n                    </Tooltip>\r\n                </List>\r\n                <Divider/>\r\n                <Tooltip disableHoverListener={openNavigation} title=\"Submission\" aria-label=\"submission\">\r\n                    <ListItem button onClick={handleClickMenuReg}>\r\n                        <ListItemIcon>\r\n                            <Icon>post_add</Icon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Submission\"/>\r\n                        {openMenuReg ? <Icon>expand_less</Icon> : <Icon>expand_more</Icon>}\r\n                    </ListItem>\r\n                </Tooltip>\r\n                <Collapse in={openMenuReg} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"1. Application Form\"\r\n                                 aria-label=\"application-form\">\r\n                            <ListItem button className={classes.nested} onClick={() => openPage(APPLICATION_FORM)}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>{userStore?.applicationFormIsValid ? \"check_circle\" : \"edit\"}</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"1. Application Form\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"2. Letter of Commitment\"\r\n                                 aria-label=\"letter-of-commitment\">\r\n                            <ListItem button disabled className={classes.nested}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>lock</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"2. Letter of Commitment\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"3. Travel Documents\"\r\n                                 aria-label=\"travel-documents\">\r\n                            <ListItem button disabled className={classes.nested}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>lock</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"3. Travel Documents\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                    </List>\r\n                </Collapse>\r\n                <Divider/>\r\n            </Drawer>\r\n        </div>\r\n    ));\r\n}","import React from \"react\";\r\nimport {Button, createStyles, Divider, Theme, Typography} from \"@material-ui/core\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {APPLICATION_FORM} from \"../constants\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            textAlign: 'center',\r\n        },\r\n    }),\r\n);\r\n\r\nconst Home: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.root}>\r\n        <Navigation/>\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n\r\n            <Typography variant=\"h3\">\r\n                Welcome to UM iCamp\r\n            </Typography>\r\n            <Divider/>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <img\r\n                    alt={'UM iCamp 2020 - Sign In Logo'}\r\n                    style={{maxHeight: '35%'}}\r\n                    src={'./apply/assets/images/um-icamp-2020.png'}/>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Typography variant=\"body1\" gutterBottom\r\n                        style={{minWidth: '400px', maxWidth: '50%', textAlign: 'center', margin: 'auto'}}>\r\n                Please continue the registration for UM iCamp 2020 by opening the navigation sidebar on your <strong>left\r\n                screen</strong>, then choose <strong>Submission > Application Form</strong> menu, or click this button\r\n                bellow.\r\n            </Typography>\r\n            <br/>\r\n            <br/>\r\n\r\n            <Link to={APPLICATION_FORM} style={{textDecoration: 'none'}}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    size={\"medium\"}\r\n                    variant={\"contained\"}\r\n                >\r\n                    Let's Get Started!\r\n                </Button>\r\n\r\n            </Link>\r\n\r\n        </main>\r\n    </div>);\r\n};\r\n\r\nexport default Home;"],"sourceRoot":""}