{"version":3,"sources":["components/MenuNavigation.tsx","components/Navigation.tsx","components/forms/InputUploadMedia.tsx","components/forms/InputSubmit.tsx","components/forms/InputPhone.tsx","components/application-form/PersonalDetails.tsx","components/forms/InputTextField.tsx","components/forms/InputRadioGroup.tsx","components/forms/InputAutoCompleteForCountry.tsx","components/application-form/EducationBackground.tsx","components/forms/InputCheckboxGroup.tsx","components/application-form/HealthCondition.tsx","components/application-form/PersonalStatement.tsx","components/application-form/EmergencyContact.tsx","constants/api.ts","components/application-form/ApplicantMedia.tsx","components/application-form/ApplicationFormConfirm.tsx","scenes/ApplicationForm.tsx"],"names":["useStyles","makeStyles","createStyles","resetLinkStyleApppBar","textDecoration","color","resetLinkStyleMenu","MenuNavigation","classes","React","useState","anchorEl","setAnchorEl","firebaseApp","useContext","FirebaseContext","userStore","UserStoreContext","history","useHistory","localStorage","getItem","emailUser","handleClose","signOutHandler","a","doSignOut","res","hasError","clear","push","SIGN_IN","Typography","variant","style","cursor","IconButton","aria-owns","Boolean","undefined","aria-haspopup","onClick","event","currentTarget","Icon","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","className","to","SETTINGS","MenuItem","Divider","theme","grow","flexGrow","resetLinkStyle","resetLinkStyleInMenu","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","nested","paddingLeft","listItemIcon","minWidth","Navigation","useTheme","openNavigation","setOpenNavigation","openMenuReg","setOpenMenuReg","handleDrawerOpen","setItem","handleDrawerClose","handleClickMenuReg","openPage","pageRoute","useObserver","CssBaseline","AppBar","position","clsx","Toolbar","aria-label","edge","alt","src","height","Drawer","paper","ListItem","button","ListItemIcon","direction","ListItemText","primary","primaryTypographyProps","List","Tooltip","disableHoverListener","title","HOME","Collapse","in","timeout","unmountOnExit","component","disablePadding","APPLICATION_FORM","applicationFormIsValid","disabled","AcceptedFileTypes","ExampleTypeOptions","InputSubmit","label","Button","type","fullWidth","InputPhone","value","onChange","required","labels","marginTop","marginBottom","fontSize","lineHeight","letterSpacing","textAlign","option","filter","createFilterOptions","PersonalDetails","loading","setLoading","fullName","setFullName","nickName","setNickName","address","setAddress","city","setCity","province","setProvince","country","setCountry","postcode","setPostcode","phone","setPhone","facebook","setFacebook","instagram","setInstagram","socialMedia","setSocialMedia","tShirtSize","setTShirtSize","dateOfBirth","setDateOfBirth","sex","setSex","maritalStatus","setMaritalStatus","religion","setReligion","passportNumber","setPassportNumber","expiryDate","setExpiryDate","nationality","setNationality","useEffect","personalDetails","countries","size","onSubmitHandler","e","preventDefault","form","reportValidity","toast","info","updatePersonalDetails","error","message","success","Grid","item","gutterBottom","onSubmit","noValidate","TextField","margin","name","autoComplete","multiline","Autocomplete","options","v","countryToICountryType","autoHighlight","disableClearable","getOptionLabel","renderOption","Fragment","countryToFlag","code","renderInput","params","inputProps","newValue","inputValue","filterOptions","filtered","tShirtOptions","freeSolo","toISOString","split","Date","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","InputTextField","helperText","rows","rowsMax","InputRadioGroup","map","data","key","cuid","InputAutoCompleteForCountry","EducationBackground","latestDegree","setLatestDegree","homeUniversity","setHomeUniversity","faculty","setFaculty","department","setDepartment","educationBackground","degreeOptions","updateEducationBackground","formControl","InputCheckboxGroup","values","check","state","setState","length","forEach","val","FormGroup","Checkbox","checked","selectedData","HealthCondition","dietaryRestriction","setDietaryRestriction","dietaryDetail","setDietaryDetail","disability","setDisability","disabilityDetail","setDisabilityDetail","medicalCondition","setMedicalCondition","specialRequirements","setSpecialRequirements","healthCondition","disabilityOptions","updateHealthCondition","dietaryRestrictionOptions","PersonalStatement","informationSources","setInformationSources","motivation","setMotivation","personalExperiences","setPersonalExperiences","specialitiesDescribe","setSpecialitiesDescribe","afterProgram","setAfterProgram","isValueError","showToast","messageToast","personalStatement","updatePersonalStatement","informationSourceOptions","EmergencyContactDetail","relationship","setRelationship","email","setEmail","emergencyContact","updateEmergencyContact","hostname","window","location","HOST_NAME","API","media","InputType","InputUploadMedia","onSubmitted","fileName","filesLimit","acceptedFileType","IMAGE","dialogTitle","subHeader","showExampleButton","exampleType","LOCAL_IMAGE","exampleData","setOpen","openDialog","setOpenDialog","dialogClear","setDialogClear","fileUrl","setFileUrl","exampleImageLocal","setExampleImageLocal","onSaveHandler","files","uid","toString","formData","FormData","append","axios","post","headers","_boundary","url","maxWidth","Card","CardHeader","subheader","PDF","CardMedia","image","CardActions","LINK","ASSETS_IMAGE","onSave","acceptedFiles","showPreviews","maxFileSize","Dialog","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","ApplicantMedia","passportPhoto","setPassportPhoto","passportScan","setPassportScan","medicalCertificate","setMedicalCertificate","declarationLetter","setDeclarationLetter","applicantMedia","onSubmittedMedia","inputType","updateApplicantMedia","ApplicationFormConfirm","TabPanel","props","children","index","other","role","hidden","Box","p","a11yProps","tabs","borderRight","palette","divider","paddingTop","paddingRight","paddingBottom","ApplicationForm","setValue","handleChange","container","xs","sm","Tabs","orientation","indicatorColor","textColor","Tab","icon","personalDetailsIsValid","educationBackgroundIsValid","healthConditionIsValid","personalStatementIsValid","emergencyContactIsValid","applicantMediaIsValid","href","target","rel"],"mappings":"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","file":"static/js/10.435a0449.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {createStyles, Divider, Icon, IconButton, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {SETTINGS, SIGN_IN} from \"../constants\";\r\nimport {FirebaseContext} from \"../firebase\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n    resetLinkStyleApppBar: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport default function MenuNavigation() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const userStore = useContext(UserStoreContext);\r\n    const history = useHistory();\r\n    const [emailUser] = useState<string>(localStorage.getItem('email') ?? '');\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const signOutHandler = async () => {\r\n        setAnchorEl(null);\r\n\r\n        const res = await firebaseApp?.doSignOut();\r\n        if (!res?.hasError()) {\r\n            userStore?.clear();\r\n            history.push(SIGN_IN);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={\"subtitle2\"} style={{cursor: 'default'}}>\r\n                {emailUser}\r\n            </Typography>\r\n            <IconButton\r\n                aria-owns={Boolean(anchorEl) ? \"menu-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={handleClick}\r\n            >\r\n                <Icon>account_circle</Icon>\r\n            </IconButton>\r\n\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <NavLink className={classes.resetLinkStyleMenu} to={SETTINGS}>\r\n                    <MenuItem onClick={handleClose}>\r\n                        Settings\r\n                    </MenuItem>\r\n                </NavLink>\r\n                <Divider/>\r\n                <MenuItem onClick={signOutHandler}>\r\n                    Sign Out\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    AppBar,\r\n    Collapse,\r\n    createStyles,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Icon,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Theme,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport MenuNavigation from \"./MenuNavigation\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {APPLICATION_FORM, HOME} from \"../constants\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\n\r\nconst drawerWidth = 275;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    resetLinkStyle: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    resetLinkStyleInMenu: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(3),\r\n    },\r\n    listItemIcon: {\r\n        minWidth: '47px',\r\n    }\r\n}));\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const userStore = useContext(UserStoreContext);\r\n\r\n    const theme = useTheme();\r\n    const [openNavigation, setOpenNavigation] = React.useState(localStorage.getItem('openNavigation') === 'open' ? true : false);\r\n    const [openMenuReg, setOpenMenuReg] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpenNavigation(true);\r\n        localStorage.setItem('openNavigation', 'open');\r\n\r\n        setOpenMenuReg(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpenNavigation(false);\r\n        localStorage.setItem('openNavigation', 'close');\r\n\r\n        setOpenMenuReg(false);\r\n    };\r\n\r\n    const handleClickMenuReg = () => {\r\n        setOpenMenuReg(!openMenuReg);\r\n    };\r\n\r\n    const openPage = (pageRoute: string) => {\r\n        history.push(pageRoute);\r\n    };\r\n\r\n    return useObserver(() => (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openNavigation,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: openNavigation,\r\n                        })}\r\n                    >\r\n                        <Icon>menu</Icon>\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"subtitle1\">\r\n                        <img alt={'UM iCamp 2020 logo navigation'} src={'./apply/assets/images/um-icamp-2020-glow.png'}\r\n                             height={45}/>\r\n                        &nbsp;&nbsp;\r\n                    </Typography>\r\n                    <Typography className={classes.grow} color=\"inherit\" variant=\"h6\">\r\n                        <span onClick={handleDrawerOpen} style={{cursor: \"pointer\"}}>\r\n                            {openNavigation ? ' ' : 'UM iCamp 2020'}\r\n                        </span>\r\n                    </Typography>\r\n                    <MenuNavigation/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: openNavigation,\r\n                    [classes.drawerClose]: !openNavigation,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: openNavigation,\r\n                        [classes.drawerClose]: !openNavigation,\r\n                    }),\r\n                }}\r\n            >\r\n                <div style={{height: '64px', display: \"flex\"}}>\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            {theme.direction === 'rtl' ? <Icon>chevron_right</Icon> : <Icon>chevron_left</Icon>}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"UM iCamp 2020\" primaryTypographyProps={{variant: \"h6\"}}/>\r\n                    </ListItem>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <Tooltip disableHoverListener={openNavigation} title=\"Dashboard\" aria-label=\"dashboard\">\r\n                        <ListItem button onClick={() => openPage(HOME)}>\r\n                            <ListItemIcon><Icon>dashboard</Icon></ListItemIcon>\r\n                            <ListItemText primary={\"Dashboard\"}/>\r\n                        </ListItem>\r\n                    </Tooltip>\r\n                </List>\r\n                <Divider/>\r\n                <Tooltip disableHoverListener={openNavigation} title=\"Submission\" aria-label=\"submission\">\r\n                    <ListItem button onClick={handleClickMenuReg}>\r\n                        <ListItemIcon>\r\n                            <Icon>post_add</Icon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Submission\"/>\r\n                        {openMenuReg ? <Icon>expand_less</Icon> : <Icon>expand_more</Icon>}\r\n                    </ListItem>\r\n                </Tooltip>\r\n                <Collapse in={openMenuReg} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"1. Application Form\"\r\n                                 aria-label=\"application-form\">\r\n                            <ListItem button className={classes.nested} onClick={() => openPage(APPLICATION_FORM)}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>{userStore?.applicationFormIsValid ? \"check_circle\" : \"edit\"}</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"1. Application Form\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"2. Letter of Commitment\"\r\n                                 aria-label=\"letter-of-commitment\">\r\n                            <ListItem button disabled className={classes.nested}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>lock</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"2. Letter of Commitment\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                        <Tooltip disableHoverListener={openNavigation} title=\"3. Travel Documents\"\r\n                                 aria-label=\"travel-documents\">\r\n                            <ListItem button disabled className={classes.nested}>\r\n                                <ListItemIcon className={classes.listItemIcon}>\r\n                                    <Icon>lock</Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"3. Travel Documents\"/>\r\n                            </ListItem>\r\n                        </Tooltip>\r\n                    </List>\r\n                </Collapse>\r\n                <Divider/>\r\n            </Drawer>\r\n        </div>\r\n    ));\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {DropzoneDialog} from \"material-ui-dropzone/dist\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardHeader,\r\n    CardMedia,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport axios from 'axios';\r\nimport {API, FOR_UPLOAD_MEDIA, HOST_NAME} from \"../../constants/api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport cuid from \"cuid\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: '30px',\r\n        marginBottom: '10px',\r\n    },\r\n    media: {\r\n        height: 300,\r\n    },\r\n});\r\n\r\nexport enum AcceptedFileTypes {\r\n    PDF = '.pdf',\r\n    PNG = 'image/png',\r\n    JPG = 'image/jpeg',\r\n    IMAGE = 'image/*',\r\n}\r\n\r\nexport enum ExampleTypeOptions {\r\n    LINK,\r\n    LOCAL_IMAGE,\r\n    ASSETS_IMAGE,\r\n}\r\n\r\ninterface IInputUploadMedia {\r\n    onSubmitted?: (message: string, response?: string, error?: boolean) => void,\r\n    fileName: string,\r\n    filesLimit?: number;\r\n    acceptedFileType?: AcceptedFileTypes,\r\n    dialogTitle?: string,\r\n    subHeader?: string,\r\n    value?: string,\r\n    showExampleButton?: boolean,\r\n    exampleType?: ExampleTypeOptions,\r\n    exampleData?: string,\r\n}\r\n\r\nconst InputUploadMedia: React.FC<IInputUploadMedia> = ({\r\n                                                           onSubmitted,\r\n                                                           fileName,\r\n                                                           filesLimit = 1,\r\n                                                           acceptedFileType = AcceptedFileTypes.IMAGE,\r\n                                                           dialogTitle = \"Dialog Title\",\r\n                                                           subHeader,\r\n                                                           value,\r\n                                                           showExampleButton = false,\r\n                                                           exampleType = ExampleTypeOptions.LOCAL_IMAGE,\r\n                                                           exampleData,\r\n                                                       }) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [dialogClear, setDialogClear] = useState<boolean>(false);\r\n    const [fileUrl, setFileUrl] = useState<string>('./apply/assets/images/white-background.png');\r\n    const [exampleImageLocal, setExampleImageLocal] = useState<string>('./apply/assets/images/white-background.png');\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setFileUrl(value ? `${HOST_NAME}${value}` : fileUrl);\r\n    }, [value, fileUrl]);\r\n\r\n    const onSaveHandler = async (files: any[]) => {\r\n        if (files.length === 0) {\r\n            toast.info('Please select or drag and drop your file.');\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        setDialogClear(true);\r\n        setLoading(true);\r\n\r\n        const uid = localStorage.getItem('uid')?.toString();\r\n\r\n        let formData = new FormData();\r\n        formData.append('data', files[0]);\r\n        formData.append('uid', uid ?? 'null');\r\n        formData.append('file-name', fileName);\r\n        formData.append('file-type', acceptedFileType.toString());\r\n\r\n        const res = await axios.post(API + FOR_UPLOAD_MEDIA, formData, {\r\n            headers: {'Content-Type': `multipart/form-data; boundary=${files[0]._boundary}`},\r\n        });\r\n\r\n        setLoading(false);\r\n\r\n        if (res.data.url) {\r\n            toast.success(\"Success uploading file.\");\r\n        } else {\r\n            toast.error(\"Fail uploading file.\");\r\n        }\r\n\r\n        if (onSubmitted) onSubmitted(res.data.message ?? null, `${res.data.url}?${cuid()}`, res.data.error);\r\n        setDialogClear(false);\r\n    };\r\n\r\n    const onCloseHandler = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onOpenHandle = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const openFileHandler = () => {\r\n        window.open(fileUrl);\r\n    };\r\n\r\n\r\n    const handleClickOpenDialog = () => {\r\n        switch (exampleType) {\r\n            case ExampleTypeOptions.LINK:\r\n                window.open(exampleData);\r\n                break;\r\n            case ExampleTypeOptions.LOCAL_IMAGE:\r\n                setExampleImageLocal('./apply/assets/images/white-background.png');\r\n                setOpenDialog(true);\r\n                break;\r\n            case ExampleTypeOptions.ASSETS_IMAGE:\r\n                setExampleImageLocal(`${exampleData}`);\r\n                setOpenDialog(true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n\r\n    return (<>\r\n        <LoadingBackground open={loading}/>\r\n\r\n        <div style={{\r\n            maxWidth: '80%',\r\n            margin: \"auto\",\r\n        }}>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    title={dialogTitle}\r\n                    subheader={subHeader}\r\n                />\r\n                <Divider/>\r\n                {\r\n                    acceptedFileType === AcceptedFileTypes.PDF ? <></> :\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={fileUrl}\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                }\r\n                <Divider/>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" variant={value ? 'contained' : 'outlined'}\r\n                            onClick={onOpenHandle}>\r\n                        {value ? 'Update' : 'Select'} File\r\n                    </Button>\r\n                    <Button disabled={!value} size=\"small\" color=\"secondary\" onClick={openFileHandler}>\r\n                        Open\r\n                    </Button>\r\n                    {\r\n                        showExampleButton ?\r\n                            <Button size=\"small\" color=\"secondary\" onClick={handleClickOpenDialog}>\r\n                                Example\r\n                            </Button> : <></>\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n        {\r\n            dialogClear ?\r\n                <></> :\r\n                <DropzoneDialog\r\n                    open={open}\r\n                    onSave={onSaveHandler}\r\n                    acceptedFiles={[acceptedFileType.toString()]}\r\n                    showPreviews={true}\r\n                    maxFileSize={1000000}\r\n                    filesLimit={filesLimit}\r\n                    onClose={onCloseHandler}\r\n                    dialogTitle={dialogTitle}\r\n                />\r\n        }\r\n        <Dialog\r\n            open={openDialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby=\"example-dialog-title\"\r\n            aria-describedby=\"example-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"example-dialog-title\">{dialogTitle}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"example-dialog-description\">\r\n                    <img\r\n                        alt={'Assets Example local'}\r\n                        src={exampleImageLocal}/>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    </>);\r\n};\r\n\r\nexport default InputUploadMedia;","import React, {MouseEventHandler} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\ninterface IInputSubmit {\r\n    label?: string,\r\n    onClick?: MouseEventHandler<any>;\r\n}\r\n\r\nconst InputSubmit: React.FC<IInputSubmit> = ({\r\n                                                 label = \"Submit\",\r\n                                                 onClick,\r\n                                             }) => {\r\n\r\n    return (<>\r\n        <br/>\r\n        <br/>\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={onClick}\r\n        >\r\n            {label}\r\n        </Button>\r\n    </>);\r\n};\r\n\r\nexport default InputSubmit;","import React from 'react';\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport 'react-phone-number-input/style.css'\r\n\r\ninterface IInputPhone {\r\n    value: string;\r\n    required?: boolean;\r\n    onChange: (value: string) => void;\r\n    labels?: string;\r\n}\r\n\r\nconst InputPhone: React.FC<IInputPhone> = ({\r\n                                               value,\r\n                                               onChange,\r\n                                               required,\r\n                                               labels\r\n                                           }) => {\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    color: '#0000008a',\r\n                    marginTop: '12px',\r\n                    marginBottom: '13px',\r\n                    marginLeft: '45px',\r\n                    padding: '0',\r\n                    fontSize: '0.9rem',\r\n                    lineHeight: '1',\r\n                    letterSpacing: '0.00938em',\r\n                    textAlign: 'left',\r\n\r\n                }}\r\n            >\r\n                {labels}\r\n            </div>\r\n            <PhoneInput\r\n                required={required}\r\n                value={value ?? undefined}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputPhone;","import React, {FormEventHandler, useContext, useEffect, useState} from \"react\";\r\nimport {Divider, FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {countries, countryToFlag, countryToICountryType, tShirtOptions} from \"../../constants\";\r\nimport {ICountryType, ITShirtOptionType} from \"../../constants/interfaces\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport InputSubmit from \"../forms/InputSubmit\";\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\nimport InputPhone from \"../forms/InputPhone\";\r\n\r\nconst useStyles = makeStyles({\r\n    option: {\r\n        fontSize: 15,\r\n        '& > span': {\r\n            marginRight: 10,\r\n            fontSize: 18,\r\n        },\r\n    },\r\n});\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport const PersonalDetails: React.FC = () => {\r\n    const classes = useStyles();\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n    const [fullName, setFullName] = useState<string | undefined>();\r\n    const [nickName, setNickName] = useState<string | undefined>();\r\n    const [address, setAddress] = useState<string | undefined>();\r\n    const [city, setCity] = useState<string | undefined>();\r\n    const [province, setProvince] = useState<string | undefined>();\r\n    const [country, setCountry] = useState<string | undefined>();\r\n    const [postcode, setPostcode] = useState<string | undefined>();\r\n    const [phone, setPhone] = useState<string | undefined>();\r\n    const [facebook, setFacebook] = useState<string | undefined>();\r\n    const [instagram, setInstagram] = useState<string | undefined>();\r\n    const [socialMedia, setSocialMedia] = useState<string | undefined>();\r\n    const [tShirtSize, setTShirtSize] = useState<ITShirtOptionType | null>(null);\r\n    const [dateOfBirth, setDateOfBirth] = React.useState<Date | undefined>();\r\n    const [sex, setSex] = useState<string>('female');\r\n    const [maritalStatus, setMaritalStatus] = useState<string>('single');\r\n    const [religion, setReligion] = useState<string | undefined>();\r\n    const [passportNumber, setPassportNumber] = useState<string | undefined>();\r\n    const [expiryDate, setExpiryDate] = React.useState<Date | undefined>();\r\n\r\n    const [nationality, setNationality] = useState<string | undefined>();\r\n\r\n    useEffect(() => {\r\n        if (!userStore?.loading) {\r\n            setFullName(userStore?.personalDetails?.fullName);\r\n            setNickName(userStore?.personalDetails?.nickName);\r\n            setAddress(userStore?.personalDetails?.address);\r\n            setCity(userStore?.personalDetails?.city);\r\n            setProvince(userStore?.personalDetails?.province);\r\n            setCountry(userStore?.personalDetails?.country ?? countries[99].label);\r\n            setPostcode(userStore?.personalDetails?.postcode);\r\n            setPhone(userStore?.personalDetails?.phone);\r\n            setFacebook(userStore?.personalDetails?.facebook);\r\n            setInstagram(userStore?.personalDetails?.instagram);\r\n            setSocialMedia(userStore?.personalDetails?.socialMedia);\r\n            setTShirtSize({size: userStore?.personalDetails?.tShirtSize ?? ''});\r\n            setDateOfBirth(userStore?.personalDetails?.dateOfBirth);\r\n            setSex(userStore?.personalDetails?.sex ?? 'female');\r\n            setMaritalStatus(userStore?.personalDetails?.maritalStatus ?? 'single');\r\n            setReligion(userStore?.personalDetails?.religion);\r\n            setPassportNumber(userStore?.personalDetails?.passportNumber);\r\n            setExpiryDate(userStore?.personalDetails?.expiryDate);\r\n            setNationality(userStore?.personalDetails?.nationality ?? countries[99].label);\r\n        }\r\n    }, [loading, userStore]);\r\n\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (!e?.currentTarget?.form?.reportValidity()) {\r\n            toast.info(\"Please complete all required data\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const res = await userStore?.updatePersonalDetails({\r\n            fullName,\r\n            nickName,\r\n            address,\r\n            city,\r\n            province,\r\n            country,\r\n            postcode,\r\n            phone,\r\n            facebook,\r\n            instagram,\r\n            socialMedia,\r\n            tShirtSize: tShirtSize?.size,\r\n            dateOfBirth,\r\n            sex,\r\n            maritalStatus,\r\n            religion,\r\n            passportNumber,\r\n            expiryDate,\r\n            nationality\r\n        });\r\n        if (res?.hasError()) {\r\n            toast.error(res?.error?.message);\r\n            setLoading(false);\r\n        } else {\r\n            toast.success(\"Success updating Personal Detail's\");\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return useObserver(() => {\r\n        if (userStore?.loading)\r\n            return <LoadingBackground open={true}/>;\r\n\r\n        return (<>\r\n            {\r\n                // @ts-ignore}\r\n                <LoadingBackground open={loading || userStore.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Personal Details\r\n                </Typography>\r\n                <Divider/>\r\n                <form onSubmit={onSubmitHandler} style={{width: '80%', textAlign: 'center'}} noValidate={false}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Full name\"\r\n                        id=\"fullName\"\r\n                        name=\"fullName\"\r\n                        autoComplete=\"fullName\"\r\n                        value={fullName ?? ''}\r\n                        onChange={(e) => setFullName(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Known as (if different)\"\r\n                        id=\"nickName\"\r\n                        name=\"nickName\"\r\n                        autoComplete=\"nickName\"\r\n                        value={nickName ?? ''}\r\n                        onChange={(e) => setNickName(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Address (please detail)\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        autoComplete=\"address\"\r\n                        multiline={true}\r\n                        value={address ?? ''}\r\n                        onChange={(e) => setAddress(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        label=\"City\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        autoComplete=\"city\"\r\n                        value={city ?? ''}\r\n                        onChange={(e) => setCity(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        label=\"Province\"\r\n                        id=\"province\"\r\n                        name=\"province\"\r\n                        autoComplete=\"province\"\r\n                        value={province ?? ''}\r\n                        onChange={(e) => setProvince(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        label=\"Postcode\"\r\n                        id=\"postcode\"\r\n                        name=\"postcode\"\r\n                        autoComplete=\"postcode\"\r\n                        value={postcode ?? ''}\r\n                        onChange={(e) => setPostcode(e.currentTarget.value)}\r\n                    />\r\n                    <Autocomplete\r\n                        id=\"country-select-demo\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        options={countries as ICountryType[]}\r\n                        classes={{option: classes.option}}\r\n                        onChange={(e: any, v: any) => setCountry(v?.label)}\r\n                        value={countryToICountryType(userStore?.personalDetails?.country) ?? countries[99]}\r\n                        autoHighlight\r\n                        disableClearable={true}\r\n                        getOptionLabel={option => option.label}\r\n                        renderOption={option => (\r\n                            <React.Fragment>\r\n                                <span>{countryToFlag(option.code)}</span>\r\n                                {option.label} ({option.code}) +{option.phone}\r\n                            </React.Fragment>\r\n                        )}\r\n                        renderInput={(params: any) => (\r\n                            <TextField\r\n                                {...params}\r\n                                required\r\n                                label=\"Country\"\r\n                                variant=\"outlined\"\r\n                                inputProps={{\r\n                                    ...params.inputProps,\r\n                                    autoComplete: 'country', // disable autocomplete and autofill\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                    {/*<TextField*/}\r\n                    {/*    variant=\"outlined\"*/}\r\n                    {/*    margin=\"normal\"*/}\r\n                    {/*    fullWidth*/}\r\n                    {/*    required*/}\r\n                    {/*    label=\"Phone or Whatsapp number\"*/}\r\n                    {/*    id=\"phone\"*/}\r\n                    {/*    name=\"phone\"*/}\r\n                    {/*    autoComplete=\"phone\"*/}\r\n                    {/*    type=\"number\"*/}\r\n                    {/*    value={phone ?? ''}*/}\r\n                    {/*    onChange={(e) => setPhone(e.currentTarget.value)}*/}\r\n                    {/*/>*/}\r\n\r\n                    <InputPhone\r\n                        required\r\n                        labels={'Phone or Whatsapp number'}\r\n                        value={phone ?? ''}\r\n                        onChange={setPhone}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Facebook (if any)\"\r\n                        id=\"facebook\"\r\n                        name=\"facebook\"\r\n                        autoComplete=\"facebook\"\r\n                        value={facebook ?? ''}\r\n                        onChange={(e) => setFacebook(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Instagram (if any)\"\r\n                        id=\"instagram\"\r\n                        name=\"instagram\"\r\n                        autoComplete=\"instagram\"\r\n                        value={instagram ?? ''}\r\n                        onChange={(e) => setInstagram(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Another social media\"\r\n                        id=\"socialMedia\"\r\n                        name=\"socialMedia\"\r\n                        autoComplete=\"socialMedia\"\r\n                        value={socialMedia ?? ''}\r\n                        onChange={(e) => setSocialMedia(e.currentTarget.value)}\r\n                    />\r\n                    <Autocomplete\r\n                        onChange={(event: any, newValue: ITShirtOptionType | null) => {\r\n                            if (newValue && newValue.inputValue) {\r\n                                setTShirtSize({\r\n                                    size: newValue.inputValue,\r\n                                });\r\n                                return;\r\n                            }\r\n\r\n                            setTShirtSize(newValue);\r\n                        }}\r\n                        filterOptions={(options, params) => {\r\n                            const filtered = filter(options, params) as ITShirtOptionType[];\r\n\r\n                            if (params.inputValue !== '') {\r\n                                filtered.push({\r\n                                    inputValue: params.inputValue,\r\n                                    size: `Add \"${params.inputValue}\"`,\r\n                                });\r\n                            }\r\n\r\n                            return filtered;\r\n                        }}\r\n                        id=\"T-Shirt-Size\"\r\n                        options={tShirtOptions as ITShirtOptionType[]}\r\n                        getOptionLabel={option => {\r\n                            // e.g value selected with enter, right from the input\r\n                            if (typeof option === 'string') {\r\n                                return option;\r\n                            }\r\n                            if (option.inputValue) {\r\n                                return option.inputValue;\r\n                            }\r\n                            return option.size;\r\n                        }}\r\n                        renderOption={option => option.size}\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        freeSolo\r\n                        disableClearable={true}\r\n                        value={tShirtSize}\r\n                        renderInput={params => (\r\n                            <TextField\r\n                                {...params}\r\n                                required\r\n                                fullWidth\r\n                                label=\"T-Shirt size\" variant=\"outlined\"/>\r\n                        )}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        id=\"date-of-birth\"\r\n                        label=\"Date of birth\"\r\n                        type=\"date\"\r\n                        value={dateOfBirth?.toISOString().split('T')[0] ?? ''}\r\n                        onChange={(e) => setDateOfBirth(new Date(e.currentTarget.value))}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                    <FormControl\r\n                        component=\"fieldset\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8, textAlign: 'left'}}\r\n                    >\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"sex\"\r\n                            name=\"sex\"\r\n                            value={sex}\r\n                            onChange={(e) => setSex(e.currentTarget.value)}\r\n                        >\r\n                            <FormControlLabel value=\"female\" control={<Radio/>} label=\"Female\"/>\r\n                            <FormControlLabel value=\"male\" control={<Radio/>} label=\"Male\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8, textAlign: 'left'}}\r\n                    >\r\n                        <FormLabel component=\"legend\">Marital status</FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"maritalStatus\"\r\n                            name=\"maritalStatus\"\r\n                            value={maritalStatus}\r\n                            onChange={(e) => setMaritalStatus(e.currentTarget.value)}\r\n                        >\r\n                            <FormControlLabel value=\"single\" control={<Radio/>} label=\"Single\"/>\r\n                            <FormControlLabel value=\"married\" control={<Radio/>} label=\"Married\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        label=\"Your religion (if any)\"\r\n                        id=\"religion\"\r\n                        name=\"religion\"\r\n                        autoComplete=\"religion\"\r\n                        value={religion ?? ''}\r\n                        onChange={(e) => setReligion(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Passport number\"\r\n                        id=\"passportNumber\"\r\n                        name=\"passportNumber\"\r\n                        autoComplete=\"passportNumber\"\r\n                        value={passportNumber ?? ''}\r\n                        onChange={(e) => setPassportNumber(e.currentTarget.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        id=\"expiry-date\"\r\n                        label=\"Expiry date (Passport)\"\r\n                        type=\"date\"\r\n                        value={expiryDate?.toISOString().split('T')[0] ?? ''}\r\n                        onChange={(e) => setExpiryDate(new Date(e.currentTarget.value))}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n\r\n                    <Autocomplete\r\n                        id=\"nationality-select-demo\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        options={countries as ICountryType[]}\r\n                        classes={{option: classes.option}}\r\n                        onChange={(e: any, v: any) => setNationality(v?.label)}\r\n                        value={countryToICountryType(userStore?.personalDetails?.nationality) ?? countries[99]}\r\n                        autoHighlight\r\n                        disableClearable={true}\r\n                        getOptionLabel={option => option.label}\r\n                        renderOption={option => (\r\n                            <React.Fragment>\r\n                                <span>{countryToFlag(option.code)}</span>\r\n                                {option.label} ({option.code}) +{option.phone}\r\n                            </React.Fragment>\r\n                        )}\r\n                        renderInput={(params: any) => (\r\n                            <TextField\r\n                                {...params}\r\n                                required\r\n                                label=\"Nationality\"\r\n                                variant=\"outlined\"\r\n                                inputProps={{\r\n                                    ...params.inputProps,\r\n                                    autoComplete: 'nationality', // disable autocomplete and autofill\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <InputSubmit label={\"Save\"} onClick={onSubmitHandler}/>\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {FilledInputProps} from \"@material-ui/core/FilledInput\";\r\n\r\ninterface IInputTextField {\r\n    value?: string,\r\n    label: string,\r\n    helperText?: string,\r\n    id?: string,\r\n    onChange?: FilledInputProps['onChange'];\r\n    required?: boolean,\r\n    multiline?: boolean,\r\n    rows?: number,\r\n    rowsMax?: number,\r\n    error?: boolean,\r\n    type?: string,\r\n}\r\n\r\nconst InputTextField: React.FC<IInputTextField> = ({\r\n                                                       value,\r\n                                                       label,\r\n                                                       id,\r\n                                                       required = false,\r\n                                                       multiline = false,\r\n                                                       helperText,\r\n                                                       onChange,\r\n                                                       rows = 1,\r\n                                                       rowsMax = 1,\r\n                                                       error,\r\n                                                       type\r\n                                                   }) => {\r\n    return (<TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        fullWidth\r\n        required={required}\r\n        label={label}\r\n        id={id}\r\n        name={id}\r\n        autoComplete={id}\r\n        multiline={multiline}\r\n        helperText={helperText}\r\n        value={value ?? ''}\r\n        onChange={onChange}\r\n        rows={rows}\r\n        rowsMax={rowsMax}\r\n        error={error}\r\n        type={type}\r\n    />);\r\n};\r\n\r\nexport default InputTextField;","import React from 'react';\r\nimport {FilledInputProps} from \"@material-ui/core/FilledInput\";\r\nimport {FormControl, FormControlLabel, FormLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport {IInputRadioGroupData} from \"../../constants/interfaces\";\r\nimport cuid from \"cuid\";\r\n\r\ninterface IInputRadioGroup {\r\n    value?: string,\r\n    label: string,\r\n    id?: string,\r\n    onChange?: FilledInputProps['onChange'];\r\n    required?: boolean,\r\n    options: IInputRadioGroupData[],\r\n}\r\n\r\nconst InputRadioGroup: React.FC<IInputRadioGroup> = ({\r\n                                                         id,\r\n                                                         label,\r\n                                                         value,\r\n                                                         options,\r\n                                                         required = false,\r\n                                                         onChange,\r\n                                                     }) => {\r\n\r\n    return (<FormControl\r\n        component=\"fieldset\"\r\n        required={required}\r\n        style={{width: '100%', marginTop: 16, marginBottom: 8, textAlign: 'left'}}\r\n    >\r\n        <FormLabel component=\"legend\">{label}</FormLabel>\r\n        <RadioGroup\r\n            aria-label={id}\r\n            name={id}\r\n            value={value}\r\n            onChange={onChange}\r\n        >\r\n            {options.map((data) => (\r\n                <FormControlLabel\r\n                    key={cuid()}\r\n                    value={data.value}\r\n                    control={<Radio/>}\r\n                    label={data.label}\r\n                />\r\n            ))}\r\n        </RadioGroup>\r\n    </FormControl>);\r\n};\r\n\r\nexport default InputRadioGroup;","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {ICountryType} from \"../../constants/interfaces\";\r\nimport {countries, countryToFlag, countryToICountryType} from \"../../constants\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    option: {\r\n        fontSize: 15,\r\n        '& > span': {\r\n            marginRight: 10,\r\n            fontSize: 18,\r\n        },\r\n    },\r\n});\r\n\r\ninterface IInputAutoComplete {\r\n    value?: string,\r\n    label: string,\r\n    id?: string,\r\n    onChange?: (event: React.ChangeEvent<{}>, value: any | null) => void;\r\n}\r\n\r\nconst InputAutoCompleteForCountry: React.FC<IInputAutoComplete> = ({\r\n                                                                       value,\r\n                                                                       label,\r\n                                                                       id,\r\n                                                                       onChange,\r\n                                                                   }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"nationality-select-demo\"\r\n            style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n            options={countries as ICountryType[]}\r\n            classes={{option: classes.option}}\r\n            onChange={onChange}\r\n            value={countryToICountryType(value)}\r\n            autoHighlight\r\n            disableClearable={true}\r\n            getOptionLabel={option => option.label}\r\n            renderOption={option => (\r\n                <React.Fragment>\r\n                    <span>{countryToFlag(option.code)}</span>\r\n                    {option.label} ({option.code}) +{option.phone}\r\n                </React.Fragment>\r\n            )}\r\n            renderInput={(params: any) => (\r\n                <TextField\r\n                    {...params}\r\n                    required\r\n                    id={id}\r\n                    name={id}\r\n                    label={label}\r\n                    variant=\"outlined\"\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'nationality', // disable autocomplete and autofill\r\n                    }}\r\n                />\r\n            )}\r\n        />);\r\n};\r\n\r\nexport default InputAutoCompleteForCountry;","import React, {FormEventHandler, useContext, useEffect, useState} from \"react\";\r\nimport {Divider, Grid} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IInputRadioGroupData} from \"../../constants/interfaces\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport InputTextField from \"../forms/InputTextField\";\r\nimport InputRadioGroup from \"../forms/InputRadioGroup\";\r\nimport {countries, degreeOptions} from \"../../constants/options\";\r\nimport InputAutoCompleteForCountry from \"../forms/InputAutoCompleteForCountry\";\r\nimport InputSubmit from \"../forms/InputSubmit\";\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\n\r\nexport const EducationBackground: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n    const [latestDegree, setLatestDegree] = useState<string | undefined>();\r\n    const [homeUniversity, setHomeUniversity] = useState<string | undefined>();\r\n    const [faculty, setFaculty] = useState<string | undefined>();\r\n    const [department, setDepartment] = useState<string | undefined>();\r\n    const [country, setCountry] = useState<string | undefined>();\r\n\r\n    useEffect(() => {\r\n        if (!userStore?.loading) {\r\n            setLatestDegree(userStore?.educationBackground?.latestDegree ?? degreeOptions[0]);\r\n            setHomeUniversity(userStore?.educationBackground?.homeUniversity);\r\n            setFaculty(userStore?.educationBackground?.faculty);\r\n            setDepartment(userStore?.educationBackground?.department);\r\n            setCountry(userStore?.educationBackground?.country ?? countries[99].label);\r\n        }\r\n    }, [loading, userStore]);\r\n\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (!e?.currentTarget?.form?.reportValidity()) {\r\n            toast.info(\"Please complete all required data\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const res = await userStore?.updateEducationBackground({\r\n            latestDegree,\r\n            homeUniversity,\r\n            faculty,\r\n            department,\r\n            country,\r\n        });\r\n        if (res?.hasError()) {\r\n            toast.error(res?.error?.message);\r\n            setLoading(false);\r\n        } else {\r\n            toast.success(\"Success updating Education Background\");\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return useObserver(() => {\r\n        if (userStore?.loading)\r\n            return <LoadingBackground open={true}/>;\r\n\r\n        return (<>\r\n            {\r\n                // @ts-ignore}\r\n                <LoadingBackground open={loading || userStore.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Education Background\r\n                </Typography>\r\n                <Divider/>\r\n                <form onSubmit={onSubmitHandler} style={{width: '80%', textAlign: 'center'}} noValidate={false}>\r\n                    <InputRadioGroup\r\n                        options={degreeOptions.map((data) => {\r\n                            return {\r\n                                label: data,\r\n                                value: data,\r\n                            } as IInputRadioGroupData;\r\n                        })}\r\n                        label={'Latest degree'}\r\n                        id={'latestDegree'}\r\n                        value={latestDegree ?? degreeOptions[0]}\r\n                        onChange={(e) => setLatestDegree(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={homeUniversity}\r\n                        id={'homeUniversity'}\r\n                        label={\"Home University / Institution / Affiliation\"}\r\n                        onChange={(e) => setHomeUniversity(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={faculty}\r\n                        id={'faculty'}\r\n                        label={\"Faculty / Division\"}\r\n                        onChange={(e) => setFaculty(e.currentTarget.value)}\r\n                    />\r\n                    <InputTextField\r\n                        value={department}\r\n                        id={'department'}\r\n                        label={\"Department / Position\"}\r\n                        onChange={(e) => setDepartment(e.currentTarget.value)}\r\n                    />\r\n                    <InputAutoCompleteForCountry\r\n                        label={\"Country\"}\r\n                        value={country ?? countries[99].label}\r\n                        onChange={(e: any, v: any) => setCountry(v?.label)}\r\n                    />\r\n\r\n                    <InputSubmit label={\"Save\"} onClick={onSubmitHandler}/>\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {Checkbox, createStyles, FormControl, FormControlLabel, FormGroup, FormLabel} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport cuid from \"cuid\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        formControl: {\r\n            width: '100%',\r\n            marginTop: 16,\r\n            marginBottom: 8,\r\n            textAlign: 'left',\r\n        },\r\n    }),\r\n);\r\n\r\ninterface IInputCheckboxGroup {\r\n    values: string[],\r\n    options: string[],\r\n    onChange: (value: string[]) => void,\r\n    label?: string,\r\n    required?: boolean,\r\n}\r\n\r\ninterface IState {\r\n    value: string,\r\n    check: boolean,\r\n}\r\n\r\nconst InputCheckboxGroup: React.FC<IInputCheckboxGroup> = ({\r\n                                                               values,\r\n                                                               options,\r\n                                                               label = \"Label\",\r\n                                                               onChange,\r\n                                                               required = false,\r\n                                                           }) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState<IState[]>(options.map((data) => {\r\n        return {\r\n            value: data,\r\n            check: false,\r\n        } as IState;\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (values?.length > 0)\r\n            setState(state.map((data) => {\r\n                values?.forEach((val) => data.check = val === data.value ? true : data.check);\r\n                return data;\r\n            }));\r\n        // eslint-disable-next-line\r\n    }, [values]);\r\n\r\n    const handleChange = (selectedData: IState) => () => {\r\n        setState(state.map((data) => {\r\n            if (selectedData === data) {\r\n                selectedData.check = !selectedData.check;\r\n                return selectedData;\r\n            }\r\n\r\n            return data;\r\n        }));\r\n\r\n        values = state.filter((data) => data.check).map((data) => data.value);\r\n        onChange(values);\r\n    };\r\n\r\n    return (\r\n        <FormControl\r\n            required={required}\r\n            component=\"fieldset\"\r\n            className={classes.formControl}\r\n        >\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <FormGroup>\r\n                {state.map((data) => (\r\n                    <FormControlLabel\r\n                        key={cuid()}\r\n                        control={<Checkbox checked={data.check} onChange={handleChange(data)} value={data.value}/>}\r\n                        label={data.value}\r\n                    />\r\n                ))}\r\n            </FormGroup>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default InputCheckboxGroup;","import React, {FormEventHandler, useContext, useEffect, useState} from \"react\";\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport InputTextField from \"../forms/InputTextField\";\r\nimport {dietaryRestrictionOptions, disabilityOptions} from \"../../constants/options\";\r\nimport InputSubmit from \"../forms/InputSubmit\";\r\nimport InputCheckboxGroup from \"../forms/InputCheckboxGroup\";\r\nimport {IInputRadioGroupData} from \"../../constants/interfaces\";\r\nimport InputRadioGroup from \"../forms/InputRadioGroup\";\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\n\r\nexport const HealthCondition: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n\r\n    const [dietaryRestriction, setDietaryRestriction] = useState<string[] | undefined>();\r\n    const [dietaryDetail, setDietaryDetail] = useState<string | undefined>();\r\n    const [disability, setDisability] = useState<string | undefined>();\r\n    const [disabilityDetail, setDisabilityDetail] = useState<string | undefined>();\r\n    const [medicalCondition, setMedicalCondition] = useState<string | undefined>();\r\n    const [specialRequirements, setSpecialRequirements] = useState<string | undefined>();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setDietaryRestriction(userStore?.healthCondition?.dietaryRestriction);\r\n            setDietaryDetail(userStore?.healthCondition?.dietaryDetail);\r\n            setDisability(userStore?.healthCondition?.disability ?? disabilityOptions[1]);\r\n            setDisabilityDetail(userStore?.healthCondition?.disabilityDetail);\r\n            setMedicalCondition(userStore?.healthCondition?.medicalCondition);\r\n            setSpecialRequirements(userStore?.healthCondition?.specialRequirements);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [loading]);\r\n\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n        setLoading(true);\r\n        const res = await userStore?.updateHealthCondition({\r\n            dietaryRestriction,\r\n            dietaryDetail,\r\n            disability,\r\n            disabilityDetail,\r\n            medicalCondition,\r\n            specialRequirements,\r\n        });\r\n        if (res?.hasError()) {\r\n            toast.error(res?.error?.message);\r\n            setLoading(false);\r\n        } else {\r\n            toast.success(\"Success updating Health Condition\");\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return useObserver(() => {\r\n        return (<>\r\n            {\r\n                // @ts-ignore\r\n                <LoadingBackground open={loading || userStore.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Dietary and Health Condition\r\n                </Typography>\r\n                <Divider/>\r\n                <form onSubmit={onSubmitHandler} style={{width: '80%', textAlign: 'center'}}>\r\n                    <InputCheckboxGroup\r\n                        label={'Dietary Restriction'}\r\n                        options={dietaryRestrictionOptions}\r\n                        values={dietaryRestriction ?? []}\r\n                        onChange={(data) => setDietaryRestriction(data)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={dietaryDetail}\r\n                        id={'dietaryDetail'}\r\n                        label={\"For other or specific dietary, please specify here\"}\r\n                        onChange={(e) => setDietaryDetail(e.currentTarget.value)}\r\n                        multiline={true}\r\n                    />\r\n                    <InputRadioGroup\r\n                        options={disabilityOptions.map((data) => {\r\n                            return {\r\n                                label: data,\r\n                                value: data,\r\n                            } as IInputRadioGroupData;\r\n                        })}\r\n                        label={'Do you have any disability?'}\r\n                        id={'disabilitylatestDegree'}\r\n                        value={disability ?? disabilityOptions[1]}\r\n                        onChange={(e) => setDisability(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={disabilityDetail}\r\n                        id={'disabilityDetail'}\r\n                        label={\"If you have any disabilities, please specify here\"}\r\n                        onChange={(e) => setDisabilityDetail(e.currentTarget.value)}\r\n                        multiline={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={medicalCondition}\r\n                        id={'medicalCondition'}\r\n                        label={\"Please specify any medical condition you suffer\"}\r\n                        helperText={' from and any medication taken. (if any)'}\r\n                        onChange={(e) => setMedicalCondition(e.currentTarget.value)}\r\n                        multiline={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={specialRequirements}\r\n                        id={'specialRequirements'}\r\n                        label={\"Any other special requirements or sensitive\"}\r\n                        helperText={\"Any issues we should be aware of\"}\r\n                        onChange={(e) => setSpecialRequirements(e.currentTarget.value)}\r\n                        multiline={true}\r\n                    />\r\n                    <InputSubmit label={\"Save\"} onClick={onSubmitHandler}/>\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};","import React, {FormEventHandler, useContext, useEffect, useState} from \"react\";\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport InputTextField from \"../forms/InputTextField\";\r\nimport {informationSourceOptions} from \"../../constants/options\";\r\nimport InputSubmit from \"../forms/InputSubmit\";\r\nimport InputCheckboxGroup from \"../forms/InputCheckboxGroup\";\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\n\r\nexport const PersonalStatement: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n\r\n    const [informationSources, setInformationSources] = useState<string[] | undefined>();\r\n    const [motivation, setMotivation] = useState<string | undefined>();\r\n    const [personalExperiences, setPersonalExperiences] = useState<string | undefined>();\r\n    const [specialitiesDescribe, setSpecialitiesDescribe] = useState<string | undefined>();\r\n    const [afterProgram, setAfterProgram] = useState<string | undefined>();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setInformationSources(userStore?.personalStatement?.informationSources);\r\n            setMotivation(userStore?.personalStatement?.motivation);\r\n            setPersonalExperiences(userStore?.personalStatement?.personalExperiences);\r\n            setSpecialitiesDescribe(userStore?.personalStatement?.specialitiesDescribe);\r\n            setAfterProgram(userStore?.personalStatement?.afterProgram);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [loading]);\r\n\r\n\r\n    function isValueError(val?: string, showToast: boolean = false, messageToast: string = 'val'): boolean {\r\n        if (val) {\r\n            if (val?.split(' ')?.length > 500) {\r\n                if (showToast) toast.error(`Please check your ${messageToast} field again`);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (!e?.currentTarget?.form?.reportValidity()) {\r\n            toast.info(\"Please complete all required data\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (\r\n            isValueError(motivation, true, 'motivation') ||\r\n            isValueError(personalExperiences, true, 'personal experiences')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        const res = await userStore?.updatePersonalStatement({\r\n            informationSources,\r\n            motivation,\r\n            personalExperiences,\r\n            specialitiesDescribe,\r\n            afterProgram,\r\n        });\r\n        if (res?.hasError()) {\r\n            toast.error(res?.error?.message);\r\n            setLoading(false);\r\n        } else {\r\n            toast.success(\"Success updating Personal Statement\");\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return useObserver(() => {\r\n        return (<>\r\n            {\r\n                // @ts-ignore\r\n                <LoadingBackground open={loading || userStore.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Personal Statement\r\n                </Typography>\r\n                <Divider/>\r\n                <form onSubmit={onSubmitHandler} style={{width: '80%', textAlign: 'center'}}>\r\n                    <InputTextField\r\n                        value={motivation}\r\n                        id={'motivation'}\r\n                        label={\"Please tell us your motivation for applying\"}\r\n                        helperText={\"What knowledge you seek to gain, and how UM iCamp program would benefit from your attendance (max. 500 words)*\"}\r\n                        onChange={(e) => setMotivation(e.currentTarget.value)}\r\n                        multiline={true}\r\n                        required={true}\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                        error={isValueError(motivation)}\r\n                    />\r\n                    <InputTextField\r\n                        value={personalExperiences}\r\n                        id={'personalExperiences'}\r\n                        label={\"Please share your personal experiences in school or your community\"}\r\n                        helperText={\" As it relates to the previous short essay (max. 500 words)*\"}\r\n                        onChange={(e) => setPersonalExperiences(e.currentTarget.value)}\r\n                        multiline={true}\r\n                        required={true}\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                        error={isValueError(personalExperiences)}\r\n                    />\r\n                    <InputTextField\r\n                        value={specialitiesDescribe}\r\n                        id={'specialitiesDescribe'}\r\n                        label={\"Describe your traits, uniqueness or specialities\"}\r\n                        helperText={\"That makes you the most suitable candidate for the program\"}\r\n                        onChange={(e) => setSpecialitiesDescribe(e.currentTarget.value)}\r\n                        multiline={true}\r\n                        required={true}\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                    />\r\n                    <InputTextField\r\n                        value={afterProgram}\r\n                        id={'afterProgram'}\r\n                        label={\"What is your plan after participating in this program?\"}\r\n                        onChange={(e) => setAfterProgram(e.currentTarget.value)}\r\n                        multiline={true}\r\n                        required={true}\r\n                        rows={3}\r\n                        rowsMax={8}\r\n                    />\r\n                    <InputCheckboxGroup\r\n                        label={'How did you hear about UM iCamp?'}\r\n                        options={informationSourceOptions}\r\n                        values={informationSources ?? []}\r\n                        onChange={(data) => setInformationSources(data)}\r\n                        required={true}\r\n                    />\r\n                    <InputSubmit label={\"Save\"} onClick={onSubmitHandler}/>\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};\r\n\r\n","import React, {FormEventHandler, useContext, useEffect, useState} from \"react\";\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport InputTextField from \"../forms/InputTextField\";\r\nimport {countries} from \"../../constants\";\r\nimport InputSubmit from \"../forms/InputSubmit\";\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\nimport InputAutoCompleteForCountry from \"../forms/InputAutoCompleteForCountry\";\r\nimport InputPhone from \"../forms/InputPhone\";\r\n\r\nexport const EmergencyContactDetail: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n    const [fullName, setFullName] = useState<string | undefined>();\r\n    const [relationship, setRelationship] = useState<string | undefined>();\r\n    const [email, setEmail] = useState<string | undefined>();\r\n    const [phone, setPhone] = useState<string | undefined>();\r\n    const [address, setAddress] = useState<string | undefined>();\r\n    const [city, setCity] = useState<string | undefined>();\r\n    const [province, setProvince] = useState<string | undefined>();\r\n    const [country, setCountry] = useState<string | undefined>();\r\n    const [postcode, setPostcode] = useState<string | undefined>();\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setFullName(userStore?.emergencyContact?.fullName);\r\n            setRelationship(userStore?.emergencyContact?.relationship);\r\n            setEmail(userStore?.emergencyContact?.email);\r\n            setPhone(userStore?.emergencyContact?.phone);\r\n            setAddress(userStore?.emergencyContact?.address);\r\n            setCity(userStore?.emergencyContact?.city);\r\n            setProvince(userStore?.emergencyContact?.province);\r\n            setCountry(userStore?.emergencyContact?.country ??countries[99].label);\r\n            setPostcode(userStore?.emergencyContact?.postcode);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [loading]);\r\n\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (!e?.currentTarget?.form?.reportValidity()) {\r\n            toast.info(\"Please complete all required data\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const res = await userStore?.updateEmergencyContact({\r\n            fullName,\r\n            relationship,\r\n            email,\r\n            phone,\r\n            address,\r\n            city,\r\n            province,\r\n            country,\r\n            postcode,\r\n        });\r\n        if (res?.hasError()) {\r\n            toast.error(res?.error?.message);\r\n            setLoading(false);\r\n        } else {\r\n            toast.success(\"Success updating Emergency Contact\");\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return useObserver(() => {\r\n        return (<>\r\n            {\r\n                // @ts-ignore\r\n                <LoadingBackground open={loading || userStore.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Emergency Contact Detail\r\n                </Typography>\r\n                <Divider/>\r\n                <form onSubmit={onSubmitHandler} style={{width: '80%', textAlign: 'center'}}>\r\n\r\n                    <InputTextField\r\n                        value={fullName}\r\n                        id={'fullName'}\r\n                        label={\"Full name\"}\r\n                        onChange={(e) => setFullName(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={relationship}\r\n                        id={'relationship'}\r\n                        label={\"Relationship to participant\"}\r\n                        onChange={(e) => setRelationship(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={email}\r\n                        id={'email'}\r\n                        label={\"E-mail\"}\r\n                        onChange={(e) => setEmail(e.currentTarget.value)}\r\n                        required={true}\r\n                        type={'email'}\r\n                    />\r\n                    <InputPhone\r\n                        required\r\n                        labels={'Phone or Whatsapp number'}\r\n                        value={phone ?? ''}\r\n                        onChange={setPhone}\r\n                    />\r\n                    <InputTextField\r\n                        value={address}\r\n                        id={'address'}\r\n                        label={\"Address\"}\r\n                        onChange={(e) => setAddress(e.currentTarget.value)}\r\n                        required={true}\r\n                        multiline={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={city}\r\n                        id={'city'}\r\n                        label={\"City\"}\r\n                        onChange={(e) => setCity(e.currentTarget.value)}\r\n                        required={true}\r\n                        multiline={true}\r\n                    />\r\n                    <InputTextField\r\n                        value={province}\r\n                        id={'province'}\r\n                        label={\"Province\"}\r\n                        onChange={(e) => setProvince(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputAutoCompleteForCountry\r\n                        label={\"Country\"}\r\n                        value={country ?? countries[99].label}\r\n                        onChange={(e: any, v: any) => setCountry(v?.label)}\r\n                    />\r\n                    <InputTextField\r\n                        value={postcode}\r\n                        id={'postcode'}\r\n                        label={\"Postcode\"}\r\n                        onChange={(e) => setPostcode(e.currentTarget.value)}\r\n                        required={true}\r\n                    />\r\n                    <InputSubmit label={\"Save\"} onClick={onSubmitHandler}/>\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};\r\n\r\n","// const hash = window.location.hash; // \"#2\"\r\nconst hostname = window.location.hostname; // \"localhost\"\r\n// const href = window.location.href; // \"http://localhost:4200/landing?query=1#2\"\r\n// const origin = window.location.origin; // \"http://localhost:4200\"\r\n// const pathname = window.location.pathname; // \"/landing\"\r\n// const port = window.location.port; // \"4200\"\r\n// const protocol = window.location.protocol; // \"http:\"\r\n// const search = window.location.search; // \"?query=1\"\r\n\r\nexport const HOST_NAME = hostname === 'localhost' || hostname === 'oia.um.test' ?\r\n    'http://oia.um.test/umicamp' :\r\n    'http://oia.um.ac.id/umicamp';\r\n\r\nexport const API = `${HOST_NAME}/api`;\r\nexport const UPLOAD_MEDIA = `${HOST_NAME}/upload-media`;\r\n\r\n\r\n\r\nexport const FOR_UPLOAD_MEDIA = '/upload/index.php';","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\nimport InputUploadMedia, {AcceptedFileTypes, ExampleTypeOptions} from \"../forms/InputUploadMedia\";\r\n\r\nenum InputType {\r\n    passportPhoto,\r\n    passportScan,\r\n    medicalCertificate,\r\n    declarationLetter,\r\n}\r\n\r\nexport const ApplicantMedia: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading, setLoading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n    const [passportPhoto, setPassportPhoto] = useState<string | undefined>();\r\n    const [passportScan, setPassportScan] = useState<string | undefined>();\r\n    const [medicalCertificate, setMedicalCertificate] = useState<string | undefined>();\r\n    const [declarationLetter, setDeclarationLetter] = useState<string | undefined>();\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setPassportPhoto(userStore?.applicantMedia?.passportPhoto);\r\n            setPassportScan(userStore?.applicantMedia?.passportScan);\r\n            setMedicalCertificate(userStore?.applicantMedia?.medicalCertificate);\r\n            setDeclarationLetter(userStore?.applicantMedia?.declarationLetter);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [loading]);\r\n\r\n    const onSubmittedMedia = async (error: boolean, inputType: InputType, url?: string) => {\r\n        if (!error) {\r\n            setLoading(true);\r\n            let hasError: boolean = false;\r\n\r\n            switch (inputType) {\r\n                case InputType.passportPhoto:\r\n                    hasError = (await userStore?.updateApplicantMedia({\r\n                        passportPhoto: url,\r\n                        passportScan: passportScan,\r\n                        medicalCertificate: medicalCertificate,\r\n                        declarationLetter: declarationLetter,\r\n                    }))?.hasError() ?? false;\r\n                    break;\r\n                case InputType.passportScan:\r\n                    hasError = (await userStore?.updateApplicantMedia({\r\n                        passportPhoto: passportPhoto,\r\n                        passportScan: url,\r\n                        medicalCertificate: medicalCertificate,\r\n                        declarationLetter: declarationLetter,\r\n                    }))?.hasError() ?? false;\r\n                    break;\r\n                case InputType.medicalCertificate:\r\n                    hasError = (await userStore?.updateApplicantMedia({\r\n                        passportPhoto: passportPhoto,\r\n                        passportScan: passportScan,\r\n                        medicalCertificate: url,\r\n                        declarationLetter: declarationLetter,\r\n                    }))?.hasError() ?? false;\r\n                    break;\r\n                case InputType.declarationLetter:\r\n                    hasError = (await userStore?.updateApplicantMedia({\r\n                        passportPhoto: passportPhoto,\r\n                        passportScan: passportScan,\r\n                        medicalCertificate: medicalCertificate,\r\n                        declarationLetter: url,\r\n                    }))?.hasError() ?? false;\r\n                    break;\r\n            }\r\n            if (hasError) {\r\n                toast.error(`Oops, we've got a problem`);\r\n            } else {\r\n                toast.success(\"Success updating Applicant Media\");\r\n            }\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return useObserver(() => {\r\n        return (<>\r\n            {\r\n                // @ts-ignore\r\n                <LoadingBackground open={loading || userStore?.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Applicant Media\r\n                </Typography>\r\n                <Divider/>\r\n                <form style={{width: '80%', textAlign: 'center'}}>\r\n                    <InputUploadMedia\r\n                        dialogTitle={\"Passport size photo\"}\r\n                        subHeader={'(4x6 cm)'}\r\n                        fileName={'passport-photo'}\r\n                        value={passportPhoto}\r\n                        showExampleButton={true}\r\n                        exampleType={ExampleTypeOptions.ASSETS_IMAGE}\r\n                        exampleData={'apply/assets/images/passport-photo-example.png'}\r\n                        onSubmitted={(message, url, error) => onSubmittedMedia(error ?? false, InputType.passportPhoto, url)}\r\n                    />\r\n                    <InputUploadMedia\r\n                        dialogTitle={\"Scan of passport\"}\r\n                        fileName={'passport-scan'}\r\n                        value={passportScan}\r\n                        showExampleButton={true}\r\n                        exampleType={ExampleTypeOptions.ASSETS_IMAGE}\r\n                        exampleData={'apply/assets/images/passport-scan-example.png'}\r\n                        onSubmitted={(message, url, error) => onSubmittedMedia(error ?? false, InputType.passportScan, url)}\r\n                    />\r\n                    <InputUploadMedia\r\n                        dialogTitle={\"Medical certificate\"}\r\n                        fileName={'medical-certificate'}\r\n                        value={medicalCertificate}\r\n                        acceptedFileType={AcceptedFileTypes.PDF}\r\n                        onSubmitted={(message, url, error) => onSubmittedMedia(error ?? false, InputType.medicalCertificate, url)}\r\n                    />\r\n                    <InputUploadMedia\r\n                        dialogTitle={\"Declaration letter\"}\r\n                        fileName={'declaration-letter'}\r\n                        value={declarationLetter}\r\n                        acceptedFileType={AcceptedFileTypes.PDF}\r\n                        showExampleButton={true}\r\n                        exampleType={ExampleTypeOptions.LINK}\r\n                        exampleData={'https://drive.google.com/file/d/1XY4gbHkBv-VbjLsIJ5AiwmBWOk8QXZqH/view'}\r\n                        onSubmitted={(message, url, error) => onSubmittedMedia(error ?? false, InputType.declarationLetter, url)}\r\n                    />\r\n                </form>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};\r\n\r\n","import React, {useContext, useState} from \"react\";\r\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport LoadingBackground from \"../LoadingBackdrop\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {UserStoreContext} from \"../../providers/UserProvider\";\r\n\r\nexport const ApplicationFormConfirm: React.FC = () => {\r\n    const userStore = useContext(UserStoreContext);\r\n    const [loading] = useState<boolean>(userStore?.loading ?? false);\r\n\r\n    return useObserver(() => {\r\n        return (<>\r\n            {\r\n                // @ts-ignore\r\n                <LoadingBackground open={loading || userStore?.loading}/>\r\n            }\r\n            <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Applicant Media\r\n                </Typography>\r\n                <Divider/>\r\n                <br/>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    size={\"medium\"}\r\n                    variant={\"contained\"}\r\n                >\r\n                    Confirm\r\n                </Button>\r\n            </Grid>\r\n        </>);\r\n    });\r\n};\r\n\r\n","import React, {useContext} from 'react';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Navigation from \"../components/Navigation\";\r\nimport {Divider, Grid, Icon} from \"@material-ui/core\";\r\nimport {PersonalDetails} from \"../components/application-form/PersonalDetails\";\r\nimport {useObserver} from 'mobx-react';\r\nimport {EducationBackground} from \"../components/application-form/EducationBackground\";\r\nimport {HealthCondition} from \"../components/application-form/HealthCondition\";\r\nimport {PersonalStatement} from \"../components/application-form/PersonalStatement\";\r\nimport {EmergencyContactDetail} from \"../components/application-form/EmergencyContact\";\r\nimport {UserStoreContext} from \"../providers/UserProvider\";\r\nimport {ApplicantMedia} from \"../components/application-form/ApplicantMedia\";\r\nimport {ApplicationFormConfirm} from \"../components/application-form/ApplicationFormConfirm\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function ApplicationForm() {\r\n    const classes = useStyles();\r\n    const userStore = useContext(UserStoreContext);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return useObserver(() => (<div className={classes.root}>\r\n        <Navigation/>\r\n\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n\r\n            <Grid container>\r\n                <Grid item xs={4} sm={2}>\r\n                    <Tabs\r\n                        orientation=\"vertical\"\r\n                        variant=\"scrollable\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        aria-label=\"Vertical tabs example\"\r\n                        className={classes.tabs}\r\n                    >\r\n                        <Tab icon={<Icon>emoji_emotions</Icon>} label=\"Information's\" {...a11yProps(0)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.personalDetailsIsValid ? \"secondary\" : \"inherit\"}>{userStore?.personalDetailsIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 1\" {...a11yProps(1)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.educationBackgroundIsValid ? \"secondary\" : \"inherit\"}>{userStore?.educationBackgroundIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 2\" {...a11yProps(1)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.healthConditionIsValid ? \"secondary\" : \"inherit\"}>{userStore?.healthConditionIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 3\" {...a11yProps(1)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.personalStatementIsValid ? \"secondary\" : \"inherit\"}>{userStore?.personalStatementIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 4\" {...a11yProps(1)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.emergencyContactIsValid ? \"secondary\" : \"inherit\"}>{userStore?.emergencyContactIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 5\" {...a11yProps(1)} />\r\n                        <Tab icon={\r\n                            <Icon\r\n                                color={userStore?.applicantMediaIsValid ? \"secondary\" : \"inherit\"}>{userStore?.applicantMediaIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Section 6\" {...a11yProps(1)} />\r\n                        <Tab disabled={!userStore?.applicationFormIsValid} icon={\r\n                            <Icon\r\n                                color={userStore?.applicationFormIsValid ? \"secondary\" : \"inherit\"}>{userStore?.applicantMediaIsValid ? 'emoji_emotions' : 'sentiment_satisfied'}</Icon>}\r\n                             label=\"Confirmation\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </Grid>\r\n                <Grid item xs={8} sm={10}>\r\n                    <TabPanel value={value} index={0}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h3\" gutterBottom>\r\n                                Application Form\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <Typography variant=\"body1\" gutterBottom>\r\n                                Before starting your application, please prepare the following documents:\r\n                            </Typography>\r\n                            <ul>\r\n                                <li>Short essay about your motivation in applying to UM iCamp 2020, what knowledge\r\n                                    you\r\n                                    seek to gain,\r\n                                    and how UM iCamp program will benefit from your attendance. (max. 500 words)\r\n                                </li>\r\n                                <li>Short essay about your activities or experiences in your community. (max. 500\r\n                                    words)\r\n                                </li>\r\n                                <li>Short argument on things that make you the most suitable candidate for the\r\n                                    program.\r\n                                </li>\r\n                                <li>A Formal Photo in Colour (passport size photo 4 cm x 6 cm) to upload. (File\r\n                                    *.JPG\r\n                                    max. 1 MB)\r\n                                </li>\r\n                                <li>Scan of passport to upload. (File *.JPG max. 1 MB)</li>\r\n                                <li>Medical certificate to upload. (File .PDF max. 1 MB)</li>\r\n                                <li>Declaration letter to upload. (File .PDF max 1 MB) Please fill out the form in\r\n                                    this\r\n                                    link&nbsp;\r\n                                    <a href={'http://bit.ly/declarationletter'} target={'_blank'}\r\n                                       rel=\"noopener noreferrer\">http://bit.ly/declarationletter</a>, sign, and upload\r\n                                    it in a PDF file format.\r\n                                </li>\r\n                            </ul>\r\n                        </Grid>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <PersonalDetails/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        <EducationBackground/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={3}>\r\n                        <HealthCondition/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={4}>\r\n                        <PersonalStatement/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={5}>\r\n                        <EmergencyContactDetail/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={6}>\r\n                        <ApplicantMedia/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={7}>\r\n                        <ApplicationFormConfirm/>\r\n                    </TabPanel>\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    </div>));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}