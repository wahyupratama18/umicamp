{"version":3,"sources":["components/Footer.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","scenes/SignUp.tsx"],"names":["Footer","variant","color","align","href","target","rel","style","textDecoration","Date","getFullYear","Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","useStyles","makeStyles","paper","marginTop","display","flexDirection","alignItems","boxShadow","transition","backgroundColor","padding","borderRadius","image","backgroundImage","backgroundRepeat","palette","type","grey","backgroundSize","backgroundPosition","height","avatar","margin","secondary","main","form","submit","SignUp","useState","localStorage","getItem","uid","firebaseApp","useContext","FirebaseContext","history","useHistory","email","setEmail","password","setPassword","loading","setLoading","validationSchema","yup","min","invalidForm","fields","isValidSync","useEffect","push","HOME","onSubmitHandler","e","a","preventDefault","doCreateUserWithEmailAndPassword","res","hasError","toast","error","message","success","SIGN_IN","open","onSubmit","container","item","fullWidth","required","id","label","autoComplete","onChange","currentTarget","disabled","justify","to","mt"],"mappings":"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","file":"static/js/8.d29defce.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <a\r\n                href={'http://oia.um.ac.id/umicamp/'}\r\n                target={'_blank'}\r\n                rel=\"noopener noreferrer\"\r\n                style={{\r\n                textDecoration: 'none',\r\n                color: '#0000008a'\r\n            }}>\r\n                Labour of ❤&nbsp;\r\n            </a>\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Footer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React, {FormEventHandler, useContext, useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Icon} from '@material-ui/core';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {FirebaseContext} from \"../firebase/\";\r\nimport * as yup from 'yup';\r\nimport {toast} from \"react-toastify\";\r\nimport {HOME, SIGN_IN} from \"../constants/routes\";\r\nimport LoadingBackground from \"../components/LoadingBackdrop\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\r\n        transition: '0.3s',\r\n        backgroundColor: 'white',\r\n        padding: '50px',\r\n        borderRadius: '10px',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(./apply/assets/images/um-icamp-2020-background.png)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        display: 'flex',\r\n        height: '100vh',\r\n\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignUp: React.FC = () => {\r\n    const classes = useStyles();\r\n    const [uid] = useState<String>(localStorage.getItem('uid') as String);\r\n    const firebaseApp = useContext(FirebaseContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .email(),\r\n        password: yup\r\n            .string()\r\n            .min(6),\r\n    });\r\n\r\n    const invalidForm: boolean = !validationSchema.fields.email.isValidSync(email) || !validationSchema.fields.password.isValidSync(password);\r\n\r\n\r\n    useEffect(() => {\r\n        if (uid) history.push(HOME);\r\n\r\n    }, [uid, history]);\r\n\r\n    const onSubmitHandler: FormEventHandler = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        if (!invalidForm) {\r\n            setLoading(true);\r\n\r\n            const res = await firebaseApp?.doCreateUserWithEmailAndPassword(email, password);\r\n            if (res?.hasError()) {\r\n                toast.error(res?.error?.message);\r\n                setLoading(false);\r\n            } else {\r\n                toast.success('Success create account. Please check your email.');\r\n                history.push(SIGN_IN);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.image}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <LoadingBackground open={loading}/>\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <Icon>lock_outlined_icon</Icon>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up to UM iCamp 2020\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={onSubmitHandler}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={(e) => setEmail(e.currentTarget.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"password\"\r\n                                    onChange={(e) => setPassword(e.currentTarget.value)}\r\n                                />\r\n                            </Grid>\r\n                            {/*<Grid item xs={12}>*/}\r\n                            {/*    <FormControlLabel*/}\r\n                            {/*        control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}*/}\r\n                            {/*        label=\"I want to receive inspiration, marketing promotions and updates via email.\"*/}\r\n                            {/*    />*/}\r\n                            {/*</Grid>*/}\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={invalidForm || loading}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item>\r\n                                <Link to=\"/sign-in\" style={{\r\n                                    textDecoration: 'none',\r\n                                    color: '#000000de'\r\n                                }}>\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Box mt={5}>\r\n                            <Footer/>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SignUp;"],"sourceRoot":""}